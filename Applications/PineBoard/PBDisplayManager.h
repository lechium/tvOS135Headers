//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "PBSDisplayManagerServiceInterface-Protocol.h"
#import "PBSDisplayState-Protocol.h"
#import "PBSMigrationHandling-Protocol.h"

@class NSArray, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSNumber, NSSet, NSString, NSUserDefaults, PBCableSignalInfo, PBSDisplayMode, SSDisplay;
@protocol OS_dispatch_source;

@interface PBDisplayManager : NSObject <PBSDisplayState, PBSDisplayManagerServiceInterface, PBSMigrationHandling>
{
    _Bool _filteredUsingdPineBoardPolicy;	// 8 = 0x8
    _Bool _canHandleHighBandwidthModes;	// 9 = 0x9
    _Bool _shouldModeSwitchForDynamicRange;	// 10 = 0xa
    _Bool _shouldModeSwitchForFrameRate;	// 11 = 0xb
    _Bool _atmosEnabled;	// 12 = 0xc
    _Bool _detectedPoorCableConnection;	// 13 = 0xd
    _Bool _deemed4KCapable;	// 14 = 0xe
    _Bool _usesDolbyLowLatency;	// 15 = 0xf
    _Bool _observingFocusedProcess;	// 16 = 0x10
    double _baseCableCheckTimeInterval;	// 24 = 0x18
    NSArray *_blackScreenRecoveryDisplayModes;	// 32 = 0x20
    NSMutableDictionary *_nextEstablishModePerDisplays;	// 40 = 0x28
    NSHashTable *_stateObservers;	// 48 = 0x30
    SSDisplay *_systemState;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_reloadStateSource;	// 64 = 0x40
    NSObject<OS_dispatch_source> *_notifyClientsSource;	// 72 = 0x48
    NSNumber *_displayConnectionToNotify;	// 80 = 0x50
    double _localeRefreshRate;	// 88 = 0x58
    NSArray *_sortedDisplayModes;	// 96 = 0x60
    PBSDisplayMode *_currentDisplayMode;	// 104 = 0x68
    PBSDisplayMode *_fallbackDisplayMode;	// 112 = 0x70
    PBSDisplayMode *_userSelectedDisplayMode;	// 120 = 0x78
    NSSet *_seenDisplayIDs;	// 128 = 0x80
    NSString *_currentDisplayID;	// 136 = 0x88
    long long _displayConnection;	// 144 = 0x90
    long long _lastCablePollStatus;	// 152 = 0x98
    NSDictionary *_audioLatencies;	// 160 = 0xa0
    double _userPreferredRefreshRate;	// 168 = 0xa8
    NSSet *_encodedPromotedDisplayModes;	// 176 = 0xb0
    NSNumber *_presentedDisplayAssistantKind;	// 184 = 0xb8
    NSUserDefaults *_defaults;	// 192 = 0xc0
    NSDictionary *_memoryStore;	// 200 = 0xc8
    NSString *_currentEDIDHash;	// 208 = 0xd0
    NSObject<OS_dispatch_source> *_cableCheckTimer;	// 216 = 0xd8
    PBCableSignalInfo *_lastCableErrorInfo;	// 224 = 0xe0
    NSMutableArray *_matchContentRequestedModes;	// 232 = 0xe8
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x0000000100203b7c
+ (unsigned long long)migrateWithContext:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100202130
+ (unsigned long long)migratePreferenceKeyForDisplayEDID:(id)arg1;	// IMP=0x0000000100201c80
+ (id)sharedInstance;	// IMP=0x00000001001f8660
+ (_Bool)shouldAllowModeSwitchForDynamicFrameRate;	// IMP=0x000000010007d018
+ (_Bool)shouldAllowModeSwitchForDynamicRange;	// IMP=0x000000010007cf18
+ (void)enumerateMutableDisplayPreferencesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001000e3728
+ (id)attachedDisplayEDIDDigest;	// IMP=0x0000000100139594
+ (id)attachedDisplayEDID;	// IMP=0x00000001001393a0
- (void).cxx_destruct;	// IMP=0x0000000100204e00
@property(nonatomic, getter=isObservingFocusedProcess) _Bool observingFocusedProcess; // @synthesize observingFocusedProcess=_observingFocusedProcess;
@property(retain, nonatomic) NSMutableArray *matchContentRequestedModes; // @synthesize matchContentRequestedModes=_matchContentRequestedModes;
@property(copy, nonatomic) PBCableSignalInfo *lastCableErrorInfo; // @synthesize lastCableErrorInfo=_lastCableErrorInfo;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *cableCheckTimer; // @synthesize cableCheckTimer=_cableCheckTimer;
@property(copy, nonatomic) NSString *currentEDIDHash; // @synthesize currentEDIDHash=_currentEDIDHash;
@property(retain, nonatomic) NSDictionary *memoryStore; // @synthesize memoryStore=_memoryStore;
@property(retain, nonatomic) NSUserDefaults *defaults; // @synthesize defaults=_defaults;
@property(readonly, nonatomic) _Bool usesDolbyLowLatency; // @synthesize usesDolbyLowLatency=_usesDolbyLowLatency;
@property(retain, nonatomic) NSNumber *presentedDisplayAssistantKind; // @synthesize presentedDisplayAssistantKind=_presentedDisplayAssistantKind;
@property(nonatomic) _Bool deemed4KCapable; // @synthesize deemed4KCapable=_deemed4KCapable;
@property(copy, nonatomic) NSSet *encodedPromotedDisplayModes; // @synthesize encodedPromotedDisplayModes=_encodedPromotedDisplayModes;
@property(nonatomic) double userPreferredRefreshRate; // @synthesize userPreferredRefreshRate=_userPreferredRefreshRate;
@property(retain, nonatomic) NSDictionary *audioLatencies; // @synthesize audioLatencies=_audioLatencies;
@property(nonatomic) long long lastCablePollStatus; // @synthesize lastCablePollStatus=_lastCablePollStatus;
@property(nonatomic) _Bool detectedPoorCableConnection; // @synthesize detectedPoorCableConnection=_detectedPoorCableConnection;
@property(nonatomic) long long displayConnection; // @synthesize displayConnection=_displayConnection;
@property(nonatomic) _Bool atmosEnabled; // @synthesize atmosEnabled=_atmosEnabled;
@property(nonatomic) _Bool shouldModeSwitchForFrameRate; // @synthesize shouldModeSwitchForFrameRate=_shouldModeSwitchForFrameRate;
@property(nonatomic) _Bool shouldModeSwitchForDynamicRange; // @synthesize shouldModeSwitchForDynamicRange=_shouldModeSwitchForDynamicRange;
@property(nonatomic) _Bool canHandleHighBandwidthModes; // @synthesize canHandleHighBandwidthModes=_canHandleHighBandwidthModes;
@property(copy, nonatomic) NSString *currentDisplayID; // @synthesize currentDisplayID=_currentDisplayID;
@property(copy, nonatomic) NSSet *seenDisplayIDs; // @synthesize seenDisplayIDs=_seenDisplayIDs;
@property(copy, nonatomic) PBSDisplayMode *userSelectedDisplayMode; // @synthesize userSelectedDisplayMode=_userSelectedDisplayMode;
@property(copy, nonatomic) PBSDisplayMode *fallbackDisplayMode; // @synthesize fallbackDisplayMode=_fallbackDisplayMode;
@property(copy, nonatomic) PBSDisplayMode *currentDisplayMode; // @synthesize currentDisplayMode=_currentDisplayMode;
@property(copy, nonatomic) NSArray *sortedDisplayModes; // @synthesize sortedDisplayModes=_sortedDisplayModes;
@property(nonatomic) double localeRefreshRate; // @synthesize localeRefreshRate=_localeRefreshRate;
@property(retain, nonatomic) NSNumber *displayConnectionToNotify; // @synthesize displayConnectionToNotify=_displayConnectionToNotify;
@property(readonly, nonatomic) NSObject<OS_dispatch_source> *notifyClientsSource; // @synthesize notifyClientsSource=_notifyClientsSource;
@property(readonly, nonatomic) NSObject<OS_dispatch_source> *reloadStateSource; // @synthesize reloadStateSource=_reloadStateSource;
@property(retain, nonatomic) SSDisplay *systemState; // @synthesize systemState=_systemState;
@property(retain, nonatomic) NSHashTable *stateObservers; // @synthesize stateObservers=_stateObservers;
@property(retain, nonatomic) NSMutableDictionary *nextEstablishModePerDisplays; // @synthesize nextEstablishModePerDisplays=_nextEstablishModePerDisplays;
@property(nonatomic) _Bool filteredUsingdPineBoardPolicy; // @synthesize filteredUsingdPineBoardPolicy=_filteredUsingdPineBoardPolicy;
@property(copy, nonatomic) NSArray *blackScreenRecoveryDisplayModes; // @synthesize blackScreenRecoveryDisplayModes=_blackScreenRecoveryDisplayModes;
@property(nonatomic) double baseCableCheckTimeInterval; // @synthesize baseCableCheckTimeInterval=_baseCableCheckTimeInterval;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000100203ff4
- (void)startObservingFocusedProcess;	// IMP=0x0000000100203aa0
- (void)removeStateObserver:(id)arg1;	// IMP=0x0000000100203a0c
- (void)addStateObserver:(id)arg1;	// IMP=0x0000000100203978
- (void)notifyStateChangeForDisplayConnection:(long long)arg1;	// IMP=0x00000001002036fc
- (id)audioLatencyForDisplayMode:(id)arg1;	// IMP=0x0000000100201c14
- (void)setAudioLatency:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000100201b74
- (_Bool)didCompleteDisplayAssistantForCurrentDisplay;	// IMP=0x0000000100201b38
- (void)displayAssistantDidCompleteForKind:(id)arg1 fromUserInteraction:(_Bool)arg2;	// IMP=0x000000010020195c
- (void)removeCableCheckHistory;	// IMP=0x0000000100201924
- (void)forgetDisplaysForDisplayAssistant;	// IMP=0x00000001002018ec
- (void)displayAssistantDidCompleteForKind:(id)arg1;	// IMP=0x000000010020187c
- (void)displayAssistantDidStartForKind:(id)arg1;	// IMP=0x0000000100201814
- (void)presentDisplayAssistantWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010020156c
- (void)handleRegionChangeWithNewCountryCode:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001002014cc
- (void)wakeDisplayWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0000000100200f88
- (void)sleepDisplayWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00000001002005dc
- (void)completeDisplayTransition:(long long)arg1 error:(id)arg2 withReply:(CDUnknownBlockType)arg3;	// IMP=0x00000001001fffe0
- (void)_resetSettingsForCurrentDisplay;	// IMP=0x00000001001ffcfc
- (_Bool)_recalculateDefaultDisplayMode:(id *)arg1;	// IMP=0x00000001001ff11c
- (id)_recalculatedBlackScreenRecoveryDisplayModes;	// IMP=0x00000001001fe920
- (id)_recalculatedDisplayModesFromCoreAnimationModes:(id)arg1;	// IMP=0x00000001001fe128
- (void)reloadState;	// IMP=0x00000001001fc838
- (void)updateDisplayManagerWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001001fb8f8
- (_Bool)updateCurrentCADisplayFromDisplayMode:(id)arg1 error:(id *)arg2;	// IMP=0x00000001001faf50
- (void)enableAtmos:(_Bool)arg1;	// IMP=0x00000001001faf0c
- (void)enableModeSwitchingForFrameRate:(_Bool)arg1;	// IMP=0x00000001001faec8
- (void)enableModeSwitchingForDynamicRange:(_Bool)arg1;	// IMP=0x00000001001fae84
- (id)findMatchingCAMode:(id)arg1;	// IMP=0x00000001001faa10
- (id)findMatchingLocaleMode:(id)arg1 enforceVirtualCheck:(_Bool)arg2;	// IMP=0x00000001001fa98c
- (id)findFirstMode:(CDUnknownBlockType)arg1;	// IMP=0x00000001001fa920
- (id)filterModes:(CDUnknownBlockType)arg1;	// IMP=0x00000001001fa8b4
- (void)fetchCurrentDisplayStateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00000001001fa804
@property(readonly, nonatomic) NSDictionary *serialisedState;
@property(readonly, nonatomic) _Bool isPresentingDisplayAssistant;
- (_Bool)isAdvertisingHDMI2;	// IMP=0x00000001001f9fb4
- (id)promotedVirtualDisplayModes;	// IMP=0x00000001001f9cfc
- (void)dealloc;	// IMP=0x00000001001f8f20
- (id)_init;	// IMP=0x00000001001f8838
- (id)init;	// IMP=0x00000001001f876c
- (double)recalculatedCurrentLocaleRefreshRate;	// IMP=0x000000010005850c
- (void)updateDisplayForNewRegionWithCountryCode:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100057fdc
- (_Bool)_isModeSwitchInProgress;	// IMP=0x000000010007fd44
- (void)_notifyDisplayModeChange:(_Bool)arg1;	// IMP=0x000000010007fc00
- (void)_notifyDisplayModeChangeDidFinish;	// IMP=0x000000010007fbc0
- (void)_considerDisplayModeSwitchFinished:(id)arg1;	// IMP=0x000000010007fb20
- (long long)reportingValueForMatchFrameRate;	// IMP=0x000000010007fac4
- (long long)reportingValueForMatchDynamicRange;	// IMP=0x000000010007fa68
- (id)_bestSDRDisplayMode;	// IMP=0x000000010007f664
- (_Bool)_shouldModeSwitchForBundleIdentifier:(id)arg1;	// IMP=0x000000010007f264
- (void)_updateDisplayManagerWithDisplayMode:(id)arg1;	// IMP=0x000000010007ee94
- (id)_findDisplayModeFromPredicate:(id)arg1;	// IMP=0x000000010007e890
- (id)_bestDisplayModeForDynamicRange:(long long)arg1 frameRate:(double)arg2;	// IMP=0x000000010007e588
- (id)_fallbackPredicatesForDynamicRange:(long long)arg1 frameRates:(id)arg2;	// IMP=0x000000010007e1b8
- (id)_displayModePredicatesForDynamicRange:(long long)arg1 frameRate:(double)arg2;	// IMP=0x000000010007dbb4
- (id)preferredDisplayModeForBundleIdentifier:(id)arg1;	// IMP=0x000000010007d6f8
- (void)performModeSwitchForDisplayConfigurationRequest:(id)arg1;	// IMP=0x000000010007d3f4
- (void)performModeSwitchForBundleIdentifierIfNeeded:(id)arg1;	// IMP=0x000000010007d18c
- (_Bool)isModeSwitchNeededForTransitionToBundleIdentifier:(id)arg1;	// IMP=0x000000010007d118
- (void)removeNativeAndPerformanceObservers;	// IMP=0x000000010007cea4
- (void)addNativeAndPerformanceObservers;	// IMP=0x000000010007cc7c
- (void)removeDisplayModeForKey:(id)arg1 persisted:(_Bool)arg2;	// IMP=0x00000001000e76d0
- (id)_readDisplayModeForKey:(id)arg1 persisted:(_Bool)arg2;	// IMP=0x00000001000e73b0
- (void)_saveDisplayMode:(id)arg1 forKey:(id)arg2 persisted:(_Bool)arg3;	// IMP=0x00000001000e7220
- (void)_saveCurrentResolutionsPreferences:(id)arg1 toPersistentStore:(_Bool)arg2;	// IMP=0x00000001000e6d40
- (id)_currentResolutionsPreferencesFromPersistentStore:(_Bool)arg1;	// IMP=0x00000001000e6724
- (double)readCableAlertIntervalOverride;	// IMP=0x00000001000e66ac
- (int)readCableScoreOverride;	// IMP=0x00000001000e65dc
- (double)readCableErrorPollingIntervalOverride;	// IMP=0x00000001000e6564
- (double)readCableHistoryWindowOverride;	// IMP=0x00000001000e64ec
- (_Bool)_debugAlwaysSaveModeEnabled;	// IMP=0x00000001000e646c
- (_Bool)_shouldPreferDolbyVisionLowLatency;	// IMP=0x00000001000e63ec
- (void)resetCableCheckCumulativeTime;	// IMP=0x00000001000e637c
- (double)readCableCheckCumulativeTime;	// IMP=0x00000001000e6304
- (void)saveCableCheckCumulativeTime:(double)arg1;	// IMP=0x00000001000e628c
- (_Bool)readDetectedPoorCableConnection;	// IMP=0x00000001000e620c
- (void)saveDetectedPoorCableConnection:(_Bool)arg1;	// IMP=0x00000001000e6190
- (void)removeLastCableErrorInfo;	// IMP=0x00000001000e6120
- (id)readLastCableErrorInfo;	// IMP=0x00000001000e5eb0
- (void)saveLastCableErrorInfo:(id)arg1;	// IMP=0x00000001000e5c3c
- (id)readAudioLatencies;	// IMP=0x00000001000e5b18
- (void)adjustAtmos:(id)arg1;	// IMP=0x00000001000e582c
- (void)removeAudioLatencies;	// IMP=0x00000001000e5698
- (void)saveNewAudioLatency:(id)arg1 forKey:(id)arg2;	// IMP=0x00000001000e549c
- (id)readEncodedPromotedDisplayModes;	// IMP=0x00000001000e5310
- (void)removePromotedDisplayModes;	// IMP=0x00000001000e51f4
- (void)saveNewPromotedDisplayMode:(id)arg1;	// IMP=0x00000001000e4e64
- (void)removeAllCompleteDisplayAssistants;	// IMP=0x00000001000e4c7c
- (_Bool)readDidCompleteDisplayAssistant;	// IMP=0x00000001000e4b78
- (void)saveDidCompleteDisplayAssistant:(_Bool)arg1;	// IMP=0x00000001000e4a58
- (double)readUserPreferredRefreshRate;	// IMP=0x00000001000e4950
- (void)saveUserPreferredRefreshRate:(double)arg1;	// IMP=0x00000001000e4894
- (_Bool)readAtmosEnabled;	// IMP=0x00000001000e478c
- (_Bool)readShouldModeSwitchForFrameRate;	// IMP=0x00000001000e4688
- (void)saveAtmosEnabled:(_Bool)arg1;	// IMP=0x00000001000e4568
- (void)saveShouldModeSwitchForFrameRate:(_Bool)arg1;	// IMP=0x00000001000e4448
- (_Bool)readShouldModeSwitchForDynamicRange;	// IMP=0x00000001000e4344
- (void)saveShouldModeSwitchForDynamicRange:(_Bool)arg1;	// IMP=0x00000001000e4224
- (_Bool)readCanDoHighBandwidth;	// IMP=0x00000001000e4120
- (void)saveCanHandleHighBandwidthModes:(_Bool)arg1;	// IMP=0x00000001000e4000
- (id)readSeenDisplayIDs;	// IMP=0x00000001000e3dec
- (void)saveCurrentDisplayID:(id)arg1;	// IMP=0x00000001000e3c08
- (void)removeUserSelectedDisplayMode;	// IMP=0x00000001000e3bbc
- (id)readUserSelectedDisplayMode;	// IMP=0x00000001000e3b70
- (void)saveUserSelectedDisplayMode:(id)arg1;	// IMP=0x00000001000e3af4
- (double)_historyWindowInterval;	// IMP=0x000000010010084c
- (double)_pollingInterval;	// IMP=0x00000001001006d0
- (void)_stopBackgroundMonitoring;	// IMP=0x0000000100100520
- (void)_startBackgroundMonitoringAndIgnoreFirstPoll:(_Bool)arg1;	// IMP=0x00000001000ffe0c
- (void)_resetTimer;	// IMP=0x00000001000ffdbc
- (void)registerModeSwitch;	// IMP=0x00000001000ffd84
- (void)resetCableInfoHistory;	// IMP=0x00000001000ffbf0
- (void)_processCurrentCableInfo;	// IMP=0x00000001000ff1b0
- (void)stopMonitoringCable;	// IMP=0x00000001000ff150
- (void)startMonitoringCable;	// IMP=0x00000001000feb98

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

