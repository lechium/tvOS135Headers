//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVAudioSessionDelegate-Protocol.h"

@class AVPlayer, AVPlayerItem, AVPlayerLayer, IMAVPlayerVideoViewController, IMPlayerChapterInfo, IMPlayerItem, IMPlayerManifest, MPNowPlayingInfoCenter, MPRemoteCommandCenter, NSMutableArray, NSString, NSTimer, NSURL, UIWindow;
@protocol IMAVPlayerDelegate, OS_dispatch_source;

@interface IMAVPlayer : NSObject <AVAudioSessionDelegate>
{
    _Bool _providesVideoView;	// 8 = 0x8
    _Bool _externalDisplay;	// 9 = 0x9
    _Bool _scrubbing;	// 10 = 0xa
    _Bool _timeObserverNeedsUpdate;	// 11 = 0xb
    _Bool _seekForward;	// 12 = 0xc
    _Bool _isUpdatingCurrentTime;	// 13 = 0xd
    _Bool _wasInterrupted;	// 14 = 0xe
    _Bool _wasInterruptedEarly;	// 15 = 0xf
    _Bool _stateChangeInterruptionFlag;	// 16 = 0x10
    int _loops;	// 20 = 0x14
    CDStruct_d823ae3d _delegateFlags;	// 24 = 0x18
    float _scanRate;	// 28 = 0x1c
    double _currentTime;	// 32 = 0x20
    id <IMAVPlayerDelegate> _delegate;	// 40 = 0x28
    MPNowPlayingInfoCenter *_infoCenter;	// 48 = 0x30
    MPRemoteCommandCenter *_commandCenter;	// 56 = 0x38
    unsigned long long _state;	// 64 = 0x40
    AVPlayer *_player;	// 72 = 0x48
    AVPlayerItem *_playerItem;	// 80 = 0x50
    IMPlayerManifest *_manifest;	// 88 = 0x58
    IMPlayerItem *_currentItem;	// 96 = 0x60
    CDUnknownBlockType _playbackErrorFallback;	// 104 = 0x68
    unsigned long long _autoStop;	// 112 = 0x70
    double _autoStopTimerTime;	// 120 = 0x78
    double _autoStopMediaTime;	// 128 = 0x80
    unsigned long long _videoScale;	// 136 = 0x88
    IMAVPlayerVideoViewController *_videoViewController;	// 144 = 0x90
    unsigned long long _currentChapterIndex;	// 152 = 0x98
    unsigned long long _chapterMetadataMode;	// 160 = 0xa0
    unsigned long long _playbackSpeed;	// 168 = 0xa8
    NSURL *_lastPlayingURL;	// 176 = 0xb0
    unsigned long long _backgroundTask;	// 184 = 0xb8
    NSTimer *_hdcpTimer;	// 192 = 0xc0
    NSTimer *_seekTimer;	// 200 = 0xc8
    NSMutableArray *_timeObservers;	// 208 = 0xd0
    NSMutableArray *_observingTimes;	// 216 = 0xd8
    NSObject<OS_dispatch_source> *_fadeOutTimer;	// 224 = 0xe0
    id _periodicTimeObserver;	// 232 = 0xe8
    id _nowPlayingInfoPeriodicTimeObserver;	// 240 = 0xf0
    NSTimer *_autoStopTimer;	// 248 = 0xf8
    double _autoStopTimerPausedTime;	// 256 = 0x100
    AVPlayerLayer *_videoLayer;	// 264 = 0x108
    UIWindow *_externalVideoWindow;	// 272 = 0x110
}

+ (void)performOnAvSessionQueue:(CDUnknownBlockType)arg1;	// IMP=0x00000001001f6e44
+ (void)performOnMainQueue:(CDUnknownBlockType)arg1;	// IMP=0x00000001001f6dc8
+ (void)performAsync:(CDUnknownBlockType)arg1;	// IMP=0x00000001001f6d90
+ (_Bool)isMinSpeed:(unsigned long long)arg1;	// IMP=0x00000001001ee794
+ (_Bool)isMaxSpeed:(unsigned long long)arg1;	// IMP=0x00000001001ee788
+ (unsigned long long)decrementPlaybackSpeed:(unsigned long long)arg1;	// IMP=0x00000001001ee768
+ (unsigned long long)incrementPlaybackSpeed:(unsigned long long)arg1;	// IMP=0x00000001001ee748
+ (unsigned long long)playbackSpeedForRate:(float)arg1;	// IMP=0x00000001001ee6f8
+ (float)rateForPlaybackSpeed:(unsigned long long)arg1;	// IMP=0x00000001001ee6d4
+ (void)_configureAudioSessionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001ec0f8
+ (void)configureAudioSessionAndSetActive:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ebd2c
+ (id)sharedPlayer;	// IMP=0x00000001001ebca8
- (void).cxx_destruct;	// IMP=0x00000001001f7178
@property(nonatomic) float scanRate; // @synthesize scanRate=_scanRate;
@property(retain, nonatomic) UIWindow *externalVideoWindow; // @synthesize externalVideoWindow=_externalVideoWindow;
@property(retain, nonatomic) AVPlayerLayer *videoLayer; // @synthesize videoLayer=_videoLayer;
@property(nonatomic) double autoStopTimerPausedTime; // @synthesize autoStopTimerPausedTime=_autoStopTimerPausedTime;
@property(retain, nonatomic) NSTimer *autoStopTimer; // @synthesize autoStopTimer=_autoStopTimer;
@property(nonatomic) _Bool stateChangeInterruptionFlag; // @synthesize stateChangeInterruptionFlag=_stateChangeInterruptionFlag;
@property(nonatomic) _Bool wasInterruptedEarly; // @synthesize wasInterruptedEarly=_wasInterruptedEarly;
@property(nonatomic) _Bool wasInterrupted; // @synthesize wasInterrupted=_wasInterrupted;
@property(nonatomic) _Bool isUpdatingCurrentTime; // @synthesize isUpdatingCurrentTime=_isUpdatingCurrentTime;
@property(retain, nonatomic) id nowPlayingInfoPeriodicTimeObserver; // @synthesize nowPlayingInfoPeriodicTimeObserver=_nowPlayingInfoPeriodicTimeObserver;
@property(retain, nonatomic) id periodicTimeObserver; // @synthesize periodicTimeObserver=_periodicTimeObserver;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *fadeOutTimer; // @synthesize fadeOutTimer=_fadeOutTimer;
@property(nonatomic) CDStruct_d823ae3d delegateFlags; // @synthesize delegateFlags=_delegateFlags;
@property(nonatomic) _Bool seekForward; // @synthesize seekForward=_seekForward;
@property(nonatomic) _Bool timeObserverNeedsUpdate; // @synthesize timeObserverNeedsUpdate=_timeObserverNeedsUpdate;
@property(retain, nonatomic) NSMutableArray *observingTimes; // @synthesize observingTimes=_observingTimes;
@property(retain, nonatomic) NSMutableArray *timeObservers; // @synthesize timeObservers=_timeObservers;
@property(retain, nonatomic) NSTimer *seekTimer; // @synthesize seekTimer=_seekTimer;
@property(retain, nonatomic) NSTimer *hdcpTimer; // @synthesize hdcpTimer=_hdcpTimer;
@property(nonatomic) unsigned long long backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property(retain, nonatomic) NSURL *lastPlayingURL; // @synthesize lastPlayingURL=_lastPlayingURL;
@property(nonatomic) unsigned long long playbackSpeed; // @synthesize playbackSpeed=_playbackSpeed;
@property(nonatomic) _Bool scrubbing; // @synthesize scrubbing=_scrubbing;
@property(nonatomic) int loops; // @synthesize loops=_loops;
@property(nonatomic) unsigned long long chapterMetadataMode; // @synthesize chapterMetadataMode=_chapterMetadataMode;
@property(nonatomic) unsigned long long currentChapterIndex; // @synthesize currentChapterIndex=_currentChapterIndex;
@property(readonly, nonatomic) _Bool externalDisplay; // @synthesize externalDisplay=_externalDisplay;
@property(retain, nonatomic) IMAVPlayerVideoViewController *videoViewController; // @synthesize videoViewController=_videoViewController;
@property(nonatomic) unsigned long long videoScale; // @synthesize videoScale=_videoScale;
@property(nonatomic) _Bool providesVideoView; // @synthesize providesVideoView=_providesVideoView;
@property(nonatomic) double autoStopMediaTime; // @synthesize autoStopMediaTime=_autoStopMediaTime;
@property(nonatomic) double autoStopTimerTime; // @synthesize autoStopTimerTime=_autoStopTimerTime;
@property(nonatomic) unsigned long long autoStop; // @synthesize autoStop=_autoStop;
@property(copy, nonatomic) CDUnknownBlockType playbackErrorFallback; // @synthesize playbackErrorFallback=_playbackErrorFallback;
@property(retain, nonatomic) IMPlayerItem *currentItem; // @synthesize currentItem=_currentItem;
@property(readonly, nonatomic) IMPlayerManifest *manifest; // @synthesize manifest=_manifest;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) MPRemoteCommandCenter *commandCenter; // @synthesize commandCenter=_commandCenter;
@property(retain, nonatomic) MPNowPlayingInfoCenter *infoCenter; // @synthesize infoCenter=_infoCenter;
@property(nonatomic) __weak id <IMAVPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
- (void)_assertMainThread;	// IMP=0x00000001001f6e40
- (void)clearAutoStop;	// IMP=0x00000001001f6cec
- (void)enforceAutoStopForMode:(unsigned long long)arg1;	// IMP=0x00000001001f6ba8
- (void)_autoStopTimerFired;	// IMP=0x00000001001f6b2c
- (void)_clearAutoStopTimmer;	// IMP=0x00000001001f6a58
- (void)_pauseAutoStopTimer;	// IMP=0x00000001001f69b8
- (void)_setupAutoStopTimer;	// IMP=0x00000001001f66f0
@property(readonly, nonatomic) double autoStopTimeRemaining;
- (void)previousChapter;	// IMP=0x00000001001f63ac
- (void)nextChapter;	// IMP=0x00000001001f6320
- (void)onChaptersLoaded:(id)arg1;	// IMP=0x00000001001f6204
- (void)_setChapterIndex:(unsigned long long)arg1;	// IMP=0x00000001001f61a8
- (void)setupChapterAtTime:(double)arg1;	// IMP=0x00000001001f5d70
@property(readonly, nonatomic) IMPlayerChapterInfo *currentChapter;
- (void)setupChapterTimeObservers;	// IMP=0x00000001001f5960
@property(readonly, nonatomic) unsigned long long chapterCount;
- (_Bool)hasChapters;	// IMP=0x00000001001f58c8
- (void)updateInfoCenterPlaybackState;	// IMP=0x00000001001f5808
- (void)updateNowPlayingDurationSnapshot;	// IMP=0x00000001001f51f4
- (void)updateNowPlayingMetadataIncludingArtwork:(_Bool)arg1;	// IMP=0x00000001001f4d30
- (void)forceTriggerTimeObserverAt:(double)arg1;	// IMP=0x00000001001f48bc
- (void)triggerTimeObserverAt:(id)arg1;	// IMP=0x00000001001f476c
- (void)setupTimeObserver:(id)arg1;	// IMP=0x00000001001f4500
- (void)updateTimeObservers;	// IMP=0x00000001001f4398
- (void)sendPeriodicTimeEvent:(double)arg1 duration:(double)arg2 finished:(_Bool)arg3;	// IMP=0x00000001001f417c
- (void)removePeriodicTimeObservers;	// IMP=0x00000001001f406c
- (void)addPeriodicTimeObservers;	// IMP=0x00000001001f3c44
- (void)clearTimeObservers;	// IMP=0x00000001001f3b08
- (void)removeAllTimeObservers;	// IMP=0x00000001001f3ac8
- (void)removeCMTimeObserver:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000001001f3a54
- (void)addCMTimeObserver:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000001001f39a8
- (void)removeTimeObserver:(double)arg1;	// IMP=0x00000001001f3960
- (void)addTimeObserver:(double)arg1;	// IMP=0x00000001001f3910
@property(readonly, nonatomic) _Bool isScanning;
- (void)scanWithRate:(float)arg1;	// IMP=0x00000001001f37f8
@property(readonly, nonatomic) _Bool bufferEmpty;
@property(readonly, nonatomic) double loadedDuration;
@property(readonly, nonatomic) double duration;
- (_Bool)isDurationReady;	// IMP=0x00000001001f34d4
- (void)onSeekTimer:(id)arg1;	// IMP=0x00000001001f3468
@property(readonly, nonatomic) _Bool isSeeking;
- (void)endSeek;	// IMP=0x00000001001f3414
- (void)cancelSeek;	// IMP=0x00000001001f33e0
- (void)startSeek:(_Bool)arg1;	// IMP=0x00000001001f32e0
- (void)_updatePlayerTimeCompleted:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001f308c
- (void)_updatePlayerToCurrentTime:(CDUnknownBlockType)arg1;	// IMP=0x00000001001f2d44
- (void)setCurrentTime:(double)arg1 fromMediaRemote:(_Bool)arg2;	// IMP=0x00000001001f2a9c
- (void)_setCurrentTime:(double)arg1;	// IMP=0x00000001001f2a84
- (void)_postNotificationName:(id)arg1 userInfo:(id)arg2;	// IMP=0x00000001001f2958
- (void)_failedToPlayToEndNotification:(id)arg1;	// IMP=0x00000001001f277c
- (void)sendItemEndedNotification;	// IMP=0x00000001001f2690
- (void)playerItemDidReachEnd:(id)arg1;	// IMP=0x00000001001f25a0
- (void)_tracksDidLoad;	// IMP=0x00000001001f231c
- (void)_durationAvailable;	// IMP=0x00000001001f2240
- (void)_updateLoadingSpinner;	// IMP=0x00000001001f20fc
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00000001001f0c08
- (void)resetPlayer:(id)arg1;	// IMP=0x00000001001f0a64
- (void)stopObservingPlayerItem:(id)arg1;	// IMP=0x00000001001f0990
- (void)_createPlayer;	// IMP=0x00000001001f0620
- (void)onRouteChange:(id)arg1;	// IMP=0x00000001001f0450
- (void)handleAudioSessionInterruption:(id)arg1;	// IMP=0x00000001001f00b8
- (void)handlePlayerInterruption:(id)arg1;	// IMP=0x00000001001effcc
@property(readonly, nonatomic) _Bool airplayVideoActive;
- (id)stillFrameAt:(double)arg1 maxSize:(struct CGSize)arg2 scale:(double)arg3;	// IMP=0x00000001001efd1c
- (void)endBackgroundTask;	// IMP=0x00000001001efbc4
- (void)beginBackgroundTask;	// IMP=0x00000001001ef9ec
@property(readonly, nonatomic) _Bool isPlaybackActive;
@property(readonly, nonatomic) _Bool isPlaybackRequested;
- (_Bool)isAtEnd;	// IMP=0x00000001001ef7b8
- (_Bool)isStalled;	// IMP=0x00000001001ef794
@property(readonly, nonatomic) unsigned long long loadState;
- (void)setState:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ef588
- (void)cancelFadeOut;	// IMP=0x00000001001ef53c
- (void)fadeOutWithDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ef0dc
- (void)fadeOutWithDuration:(double)arg1;	// IMP=0x00000001001ef0cc
- (void)fadeOut;	// IMP=0x00000001001ef0bc
- (void)sleep;	// IMP=0x00000001001eeffc
- (void)toggleVideoAspectScaleMode;	// IMP=0x00000001001eefc0
- (_Bool)togglePlayPause;	// IMP=0x00000001001eeec4
- (_Bool)stop;	// IMP=0x00000001001eee30
- (_Bool)_pause:(_Bool)arg1;	// IMP=0x00000001001eed8c
- (_Bool)_pause;	// IMP=0x00000001001eed44
- (_Bool)pause;	// IMP=0x00000001001eecb8
- (_Bool)_validatePlay;	// IMP=0x00000001001eeab0
- (void)play:(CDUnknownBlockType)arg1 interruptionEvent:(_Bool)arg2;	// IMP=0x00000001001ee7f0
- (_Bool)play;	// IMP=0x00000001001ee7a0
@property(readonly, nonatomic) float actualRate;
- (float)storedVolume;	// IMP=0x00000001001ee4e4
@property(nonatomic) float volume;
@property(nonatomic) float requestedRate;
@property(nonatomic) _Bool shouldEnforceHDCP;
- (void)hdcpTimer:(id)arg1;	// IMP=0x00000001001edefc
- (void)setCurrentTimeRemote:(double)arg1;	// IMP=0x00000001001edeec
- (void)previousRemote:(_Bool)arg1;	// IMP=0x00000001001edbc4
- (void)previousRemote;	// IMP=0x00000001001edbb4
- (void)nextRemote;	// IMP=0x00000001001ed978
- (void)_updateForCurrentRateAndTimeControlStatus;	// IMP=0x00000001001ed564
- (void)updateRateForCurrentState:(CDUnknownBlockType)arg1;	// IMP=0x00000001001ed18c
- (void)updateRateForCurrentState;	// IMP=0x00000001001ed17c
- (void)_updatePlayerForCurrentItem;	// IMP=0x00000001001eccdc
- (void)_primitiveSetCurrentItem:(id)arg1;	// IMP=0x00000001001ecc3c
- (void)manifestCurrentItemDidChange;	// IMP=0x00000001001ec71c
- (void)setManifest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ec4c0
- (void)previousMediaItem;	// IMP=0x00000001001ec3c0
- (void)nextMediaItem;	// IMP=0x00000001001ec2ac
- (void)becomeActiveMediaPlayer;	// IMP=0x00000001001ec24c
- (void)registerAVSessionCategoryAndMode;	// IMP=0x00000001001ebd14
- (void)dealloc;	// IMP=0x00000001001ebb64
- (id)init;	// IMP=0x00000001001eb60c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

