//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "MPCPlaybackEngineDelegate-Protocol.h"
#import "MPCPlaybackEngineEventObserving-Protocol.h"
#import "MTTVMusicPlayQueueDelegate-Protocol.h"
#import "TVPAVFPlayback-Protocol.h"

@class AVPlayer, MPAVItem, MPCPlaybackEngine, MPCPlaybackIntent, MPIdentifierSet, MTTVMusicPlayQueue, NSArray, NSDate, NSMutableArray, NSString, TVPAudioOption, TVPChapter, TVPChapterCollection, TVPDateRange, TVPInterstitial, TVPPlaybackState, TVPPlaylist, TVPSubtitleOption, TVPTimeRange;
@protocol OS_dispatch_queue, TVPASyncPlaybackDelegate, TVPMediaItem, TVPPlaybackDelegate;

@interface MTTVMusicPlayer : NSObject <MTTVMusicPlayQueueDelegate, MPCPlaybackEngineDelegate, MPCPlaybackEngineEventObserving, TVPAVFPlayback>
{
    id <TVPMediaItem> _currentMediaItem;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_mediaItemObservationQueue;	// 16 = 0x10
    _Bool _waitsAfterPreparingMediaItems;	// 24 = 0x18
    _Bool interactive;	// 25 = 0x19
    _Bool limitReadAhead;	// 26 = 0x1a
    _Bool muted;	// 27 = 0x1b
    _Bool updatesMediaRemoteInfoAutomatically;	// 28 = 0x1c
    _Bool preventsSleepDuringVideoPlayback;	// 29 = 0x1d
    _Bool currentMediaItemInitialLoadingComplete;	// 30 = 0x1e
    _Bool _elapsedTimeJumpInProgress;	// 31 = 0x1f
    _Bool _isStopped;	// 32 = 0x20
    _Bool _isLive;	// 33 = 0x21
    float volume;	// 36 = 0x24
    long long errorBehavior;	// 40 = 0x28
    TVPChapterCollection *currentChapterCollection;	// 48 = 0x30
    double rateUsedForPlayback;	// 56 = 0x38
    NSArray *subtitleOptions;	// 64 = 0x40
    double maximumBitRate;	// 72 = 0x48
    id <TVPASyncPlaybackDelegate> asyncDelegate;	// 80 = 0x50
    TVPSubtitleOption *selectedSubtitleOption;	// 88 = 0x58
    long long mediaItemEndAction;	// 96 = 0x60
    TVPInterstitial *currentInterstitial;	// 104 = 0x68
    NSArray *chapterCollections;	// 112 = 0x70
    TVPAudioOption *selectedAudioOption;	// 120 = 0x78
    double forwardPlaybackEndTime;	// 128 = 0x80
    NSDate *playbackDate;	// 136 = 0x88
    double reversePlaybackEndTime;	// 144 = 0x90
    TVPChapter *currentChapter;	// 152 = 0x98
    MTTVMusicPlayQueue *_playQueue;	// 160 = 0xa0
    MPCPlaybackEngine *_playbackEngine;	// 168 = 0xa8
    NSString *_name;	// 176 = 0xb0
    NSMutableArray *_elapsedTimeObservers;	// 184 = 0xb8
    AVPlayer *_avPlayer;	// 192 = 0xc0
    double _targetElapsedTime;	// 200 = 0xc8
    TVPPlaybackState *_state;	// 208 = 0xd0
    double _duration;	// 216 = 0xd8
    TVPTimeRange *_bufferedTimeRange;	// 224 = 0xe0
    MPAVItem *_currentAVItem;	// 232 = 0xe8
    MPIdentifierSet *_identifiersForLastPlayedContainer;	// 240 = 0xf0
    MPIdentifierSet *_identifiersForLastEndedPlaybackItem;	// 248 = 0xf8
}

- (void).cxx_destruct;	// IMP=0x0000000100100aac
@property(retain, nonatomic) MPIdentifierSet *identifiersForLastEndedPlaybackItem; // @synthesize identifiersForLastEndedPlaybackItem=_identifiersForLastEndedPlaybackItem;
@property(retain, nonatomic) MPIdentifierSet *identifiersForLastPlayedContainer; // @synthesize identifiersForLastPlayedContainer=_identifiersForLastPlayedContainer;
@property(retain, nonatomic) MPAVItem *currentAVItem; // @synthesize currentAVItem=_currentAVItem;
@property(retain, nonatomic) TVPTimeRange *bufferedTimeRange; // @synthesize bufferedTimeRange=_bufferedTimeRange;
@property(nonatomic) _Bool isLive; // @synthesize isLive=_isLive;
@property(nonatomic) _Bool isStopped; // @synthesize isStopped=_isStopped;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) TVPPlaybackState *state; // @synthesize state=_state;
@property(nonatomic) double targetElapsedTime; // @synthesize targetElapsedTime=_targetElapsedTime;
@property(nonatomic) _Bool elapsedTimeJumpInProgress; // @synthesize elapsedTimeJumpInProgress=_elapsedTimeJumpInProgress;
@property(retain, nonatomic) AVPlayer *avPlayer; // @synthesize avPlayer=_avPlayer;
@property(retain, nonatomic) NSMutableArray *elapsedTimeObservers; // @synthesize elapsedTimeObservers=_elapsedTimeObservers;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) MPCPlaybackEngine *playbackEngine; // @synthesize playbackEngine=_playbackEngine;
@property(retain, nonatomic) MTTVMusicPlayQueue *playQueue; // @synthesize playQueue=_playQueue;
@property(nonatomic) _Bool currentMediaItemInitialLoadingComplete; // @synthesize currentMediaItemInitialLoadingComplete;
@property(readonly, nonatomic) TVPChapter *currentChapter; // @synthesize currentChapter;
@property(readonly, nonatomic) double reversePlaybackEndTime; // @synthesize reversePlaybackEndTime;
@property(nonatomic) float volume; // @synthesize volume;
@property(copy, nonatomic) NSDate *playbackDate; // @synthesize playbackDate;
@property(readonly, nonatomic) double forwardPlaybackEndTime; // @synthesize forwardPlaybackEndTime;
@property(retain, nonatomic) TVPAudioOption *selectedAudioOption; // @synthesize selectedAudioOption;
@property(readonly, nonatomic) NSArray *chapterCollections; // @synthesize chapterCollections;
@property(readonly, nonatomic) TVPInterstitial *currentInterstitial; // @synthesize currentInterstitial;
@property(nonatomic) long long mediaItemEndAction; // @synthesize mediaItemEndAction;
@property(nonatomic) _Bool preventsSleepDuringVideoPlayback; // @synthesize preventsSleepDuringVideoPlayback;
@property(retain, nonatomic) TVPSubtitleOption *selectedSubtitleOption; // @synthesize selectedSubtitleOption;
@property(nonatomic) __weak id <TVPASyncPlaybackDelegate> asyncDelegate; // @synthesize asyncDelegate;
@property(nonatomic) double maximumBitRate; // @synthesize maximumBitRate;
@property(readonly, nonatomic) NSArray *subtitleOptions; // @synthesize subtitleOptions;
@property(nonatomic) _Bool updatesMediaRemoteInfoAutomatically; // @synthesize updatesMediaRemoteInfoAutomatically;
@property(nonatomic) _Bool waitsAfterPreparingMediaItems; // @synthesize waitsAfterPreparingMediaItems=_waitsAfterPreparingMediaItems;
@property(nonatomic) _Bool muted; // @synthesize muted;
@property(nonatomic) double rateUsedForPlayback; // @synthesize rateUsedForPlayback;
@property(nonatomic) _Bool limitReadAhead; // @synthesize limitReadAhead;
@property(retain, nonatomic) TVPChapterCollection *currentChapterCollection; // @synthesize currentChapterCollection;
@property(nonatomic) _Bool interactive; // @synthesize interactive;
@property(nonatomic) long long errorBehavior; // @synthesize errorBehavior;
- (void)engine:(id)arg1 didResetQueueWithPlaybackContext:(id)arg2 error:(id)arg3;	// IMP=0x0000000100100850
- (void)engine:(id)arg1 willChangeToItem:(id)arg2 fromItem:(id)arg3;	// IMP=0x00000001001006f8
- (_Bool)_getStringForTitleLabel:(id *)arg1 subtitleLabel:(id *)arg2 forMediaItem:(id)arg3;	// IMP=0x00000001001005bc
- (void)_populatePlayerItem:(id)arg1 withMetadataFromMediaItem:(id)arg2;	// IMP=0x0000000100100058
- (id)_TVPPlaybackStateFromMCPPlayerState:(long long)arg1;	// IMP=0x00000001000fff64
- (void)_playerPathChanged:(id)arg1;	// IMP=0x00000001000ffefc
- (void)_itemChanged:(id)arg1;	// IMP=0x00000001000ffe04
- (void)_itemReadyToPlay:(id)arg1;	// IMP=0x00000001000ffbf4
- (void)_loadedDurationDidChange:(id)arg1;	// IMP=0x00000001000ffb54
- (void)engine:(id)arg1 willResetQueueWithPlaybackIntent:(id)arg2;	// IMP=0x00000001000ffb50
- (void)_sendNotificationForError:(id)arg1 avItem:(id)arg2;	// IMP=0x00000001000ff94c
- (void)engine:(id)arg1 didFailToPlayItem:(id)arg2 withError:(id)arg3;	// IMP=0x00000001000ff884
- (void)engine:(id)arg1 didFailToPlayFirstItem:(id)arg2;	// IMP=0x00000001000ff814
- (void)engineDidPauseForLeaseEnd:(id)arg1;	// IMP=0x00000001000ff7bc
- (void)_updateElapsedTimeObserversWithDurationSnapshot:(CDStruct_fce57115)arg1;	// IMP=0x00000001000ff5ec
- (void)playQueue:(id)arg1 didChangeDurationSnapshot:(CDStruct_fce57115)arg2;	// IMP=0x00000001000ff4b4
- (void)playQueue:(id)arg1 didChangeAVPlayer:(id)arg2;	// IMP=0x00000001000ff4a4
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00000001000ff2e4
- (void)_setAVPlayer:(id)arg1;	// IMP=0x00000001000fefd4
- (void)playQueue:(id)arg1 didChangeFromPlayState:(long long)arg2 toPlayState:(long long)arg3;	// IMP=0x00000001000fed34
- (void)playQueue:(id)arg1 didChangePlayingItem:(id)arg2;	// IMP=0x00000001000fed24
- (void)playQueue:(id)arg1 didUpdateQueue:(id)arg2;	// IMP=0x00000001000feb0c
- (void)skipToNextChapterInDirection:(long long)arg1;	// IMP=0x00000001000feb08
- (_Bool)currentMediaItemSupportsScrubbingUsingPlayer;	// IMP=0x00000001000feb00
- (void)updateSubtitleOptions;	// IMP=0x00000001000feafc
- (void)setSelectedSubtitleOption:(id)arg1 setGlobalPreference:(_Bool)arg2;	// IMP=0x00000001000feaf8
- (void)removeBoundaryTimeObserverWithToken:(id)arg1;	// IMP=0x00000001000feaf0
@property(readonly, nonatomic) TVPDateRange *seekableDateRange;
@property(readonly, nonatomic) TVPTimeRange *seekableTimeRange;
@property(readonly, nonatomic) NSArray *audioOptions;
- (void)invalidate;	// IMP=0x00000001000fea88
- (void)removeWeakReferenceToVideoView:(id)arg1;	// IMP=0x00000001000fea84
- (void)addWeakReferenceToVideoView:(id)arg1;	// IMP=0x00000001000fea80
- (void)continueLoadingCurrentItem;	// IMP=0x00000001000fea7c
- (void)stopWithVolumeRampDuration:(double)arg1;	// IMP=0x00000001000fea70
- (void)pauseWithVolumeRampDuration:(double)arg1;	// IMP=0x00000001000fea64
- (void)pauseIgnoringDelegate:(_Bool)arg1;	// IMP=0x00000001000fea58
- (void)playIgnoringDelegate:(_Bool)arg1;	// IMP=0x00000001000fea4c
- (id)addBoundaryTimeObserverForDates:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000fe9d4
- (id)addBoundaryTimeObserverForTimes:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000fe9cc
- (void)changeMediaInDirection:(long long)arg1 reason:(id)arg2;	// IMP=0x00000001000fe9c0
- (void)changeMediaInDirection:(long long)arg1;	// IMP=0x00000001000fe958
- (void)changeToMediaAtIndex:(unsigned long long)arg1 reason:(id)arg2;	// IMP=0x00000001000fe910
- (void)setElapsedTime:(double)arg1 seekPrecision:(CDStruct_1b6d18a9)arg2 ignoreDelegate:(_Bool)arg3;	// IMP=0x00000001000fe904
- (void)setElapsedTime:(double)arg1 seekPrecision:(CDStruct_1b6d18a9)arg2;	// IMP=0x00000001000fe8f8
- (void)setElapsedTime:(double)arg1 orPlaybackDate:(id)arg2 withAVKitCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000fe84c
- (void)setElapsedTime:(double)arg1 precise:(_Bool)arg2;	// IMP=0x00000001000fe840
- (void)setElapsedTime:(double)arg1;	// IMP=0x00000001000fe7c4
@property(readonly, nonatomic) double elapsedTime;
- (void)_setCurrentMediaItem:(id)arg1;	// IMP=0x00000001000fe4f0
@property(retain, nonatomic) NSObject<TVPMediaItem> *currentMediaItem;
- (void)_setCurrentState:(id)arg1;	// IMP=0x00000001000fe0ec
- (void)stop;	// IMP=0x00000001000fdecc
- (void)play;	// IMP=0x00000001000fde74
- (void)togglePlayPause;	// IMP=0x00000001000fdde0
- (void)scanWithRate:(double)arg1;	// IMP=0x00000001000fdd30
- (void)pause;	// IMP=0x00000001000fdc24
@property(nonatomic) __weak id <TVPPlaybackDelegate> delegate;
@property(readonly, nonatomic) double rate;
- (void)removeElapsedTimeObserverWithToken:(id)arg1;	// IMP=0x00000001000fdb0c
- (id)addElapsedTimeObserver:(CDUnknownBlockType)arg1;	// IMP=0x00000001000fda74
@property(readonly, nonatomic) _Bool currentMediaItemHasDates;
@property(readonly, nonatomic) struct CGSize currentMediaItemPresentationSize;
@property(readonly, nonatomic) _Bool currentMediaItemIsStreaming;
@property(readonly, nonatomic) _Bool currentMediaItemPreparedForLoading;
@property(readonly, nonatomic) _Bool currentMediaItemHasVideoContent;
@property(retain, nonatomic) TVPPlaylist *playlist;
@property(retain, nonatomic) MPCPlaybackIntent *fallbackPlaybackIntent;
- (void)dealloc;	// IMP=0x00000001000fd744
- (id)init;	// IMP=0x00000001000fd550
- (id)initWithName:(id)arg1;	// IMP=0x00000001000fd4ec

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

