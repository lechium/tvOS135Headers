//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CoreData/NSManagedObject.h>

#import "IMMetricsDataSource-Protocol.h"
#import "MTEpisodeIdentifierProvider-Protocol.h"

@class MTPodcast, MTSyncInfo, NSAttributedString, NSData, NSSet, NSString;
@protocol MTEpisodeIdentifier;

@interface MTEpisode : NSManagedObject <IMMetricsDataSource, MTEpisodeIdentifierProvider>
{
}

+ (void)parseAndPersistHTMLDescriptionIfNeededForEpisodeUuid:(id)arg1;	// IMP=0x0000000100018694
+ (_Bool)isExternalMedia:(id)arg1;	// IMP=0x0000000100017a08
+ (_Bool)exists:(id)arg1;	// IMP=0x0000000100017834
+ (_Bool)isSaveSupported;	// IMP=0x000000010001782c
+ (long long)downloadSizeLimitForVideo:(_Bool)arg1;	// IMP=0x0000000100017824
+ (long long)downloadSizeLimitForEpisode:(id)arg1;	// IMP=0x00000001000177e8
+ (id)timeRemainingStringForEpisode:(id)arg1 abbreviated:(_Bool)arg2;	// IMP=0x0000000100017668
+ (id)timeRemainingStringForEpisode:(id)arg1;	// IMP=0x0000000100017658
+ (id)friendlyPubDateStringForEpisode:(id)arg1 abbreviated:(_Bool)arg2;	// IMP=0x00000001000175a8
+ (id)friendlyPubDateStringForEpisode:(id)arg1;	// IMP=0x0000000100017598
+ (id)dateLabelDescriptionForEpisode:(id)arg1 download:(id)arg2;	// IMP=0x0000000100017230
+ (id)episodeWithEnclosureURL:(id)arg1 inManagedObjectContext:(id)arg2;	// IMP=0x0000000100017068
+ (id)episodeWithMetadataIdentifier:(id)arg1 inManagedObjectContext:(id)arg2;	// IMP=0x0000000100016eac
+ (void)prepareForPlatform:(id)arg1;	// IMP=0x0000000100016ea8
+ (id)insertNewEpisodeInManagedObjectContext:(id)arg1;	// IMP=0x0000000100016d20
+ (id)insertNewEpisodeInManagedObjectContext:(id)arg1 title:(id)arg2 podcast:(id)arg3 pubDate:(id)arg4 byteSize:(long long)arg5 guid:(id)arg6 uti:(id)arg7 contentId:(long long)arg8 enclosureUrl:(id)arg9 playStateSource:(int)arg10 importSource:(int)arg11;	// IMP=0x0000000100016ad0
+ (_Bool)isPlayhead:(double)arg1 resumableForDuration:(double)arg2;	// IMP=0x00000001000e1048
+ (double)endOfTrackForDuration:(double)arg1;	// IMP=0x00000001000e1008
+ (id)propertyPathForPodcastProperty:(id)arg1;	// IMP=0x00000001000df88c
+ (id)sortDescriptorsForSeasonsWithOldestEpisodesFirst:(_Bool)arg1;	// IMP=0x0000000100138f10
+ (id)sortDescriptorsForListenNow;	// IMP=0x0000000100138db4
+ (id)sortDescriptorsForTitle;	// IMP=0x0000000100138c80
+ (id)sortDescriptorsForRecentlyPlayed;	// IMP=0x0000000100138c1c
+ (id)sortDescriptorsForLastDatePlayedAscending:(_Bool)arg1;	// IMP=0x0000000100138ae4
+ (id)sortDescriptorsForPubDateAscending:(_Bool)arg1;	// IMP=0x00000001001389ac
+ (id)predicateForEpisodesWithSeasonNumbersOnPodcastUuid:(id)arg1;	// IMP=0x00000001001641d8
+ (id)predicateForSeasonNumber:(long long)arg1;	// IMP=0x0000000100164114
+ (id)predicateForHasSeasonNumber;	// IMP=0x00000001001640d0
+ (id)predicateForEpisodeTitle:(id)arg1 onPodcastUuid:(id)arg2;	// IMP=0x000000010016404c
+ (id)predicateForEpisodeGuid:(id)arg1 onPodcastUuid:(id)arg2;	// IMP=0x0000000100163fc8
+ (id)predicateForEpisodeStoreTrackIds:(id)arg1;	// IMP=0x0000000100163e60
+ (id)predicateForEpisodeStoreTrackId:(long long)arg1;	// IMP=0x0000000100163d64
+ (id)predicateForMyEpisodesOnPodcastUuid:(id)arg1 ctx:(id)arg2;	// IMP=0x0000000100163d00
+ (id)predicateForEpisodesOnUnplayedTabOnPodcastUuid:(id)arg1 ctx:(id)arg2;	// IMP=0x0000000100163b28
+ (id)predicateForUserEpisodesOnPodcastUuid:(id)arg1 ctx:(id)arg2;	// IMP=0x0000000100163950
+ (id)predicateForEpisodesInStationShow:(id)arg1;	// IMP=0x00000001001638fc
+ (id)predicateForNewEpisodesOnPodcastUuid:(id)arg1;	// IMP=0x000000010016386c
+ (id)predicateForEpisodesPublishedThisMonth;	// IMP=0x000000010016367c
+ (id)predicateForEpisodesPublishedThisWeek;	// IMP=0x000000010016348c
+ (id)predicateForEpisodesPublishedToday;	// IMP=0x00000001001632f8
+ (id)predicateForPlaylistEpisodes;	// IMP=0x00000001001632b4
+ (id)predicateForUserEpisodesOnPodcastUuid:(id)arg1 episodeLimit:(long long)arg2 deletePlayedEpisodes:(_Bool)arg3;	// IMP=0x0000000100163198
+ (id)predicateForEpisodesOnSavedTabForPodcastUuid:(id)arg1;	// IMP=0x00000001001630b0
+ (id)predicateForEpisodesInFeedForPodcastUuid:(id)arg1;	// IMP=0x0000000100163020
+ (id)predicateForEpisodesOnUnplayedTabOnPodcastUuid:(id)arg1 episodeLimit:(long long)arg2 deletePlayedEpisodes:(_Bool)arg3;	// IMP=0x0000000100162ef0
+ (id)predicateForMyEpisodesOnPodcastUuid:(id)arg1 episodeLimit:(long long)arg2 deletePlayedEpisodes:(_Bool)arg3;	// IMP=0x0000000100162ee4
+ (id)predicateForEpisodesIsFromiTunesSyncOnPodcastUuid:(id)arg1;	// IMP=0x0000000100162e54
+ (id)predicateForRecentlyPlayedEpisodesToBeDeletedOnPodcastUuid:(id)arg1 deletePlayedEpisodes:(_Bool)arg2;	// IMP=0x0000000100162c9c
+ (id)predicateForOtherEpisodesOnPodcastUuid:(id)arg1 limittedEpisodesPredicate:(id)arg2 deletePlayedEpisodes:(_Bool)arg3;	// IMP=0x00000001001629e0
+ (id)predicateForEpisodeTypeFilter:(long long)arg1;	// IMP=0x00000001001628ac
+ (id)predicateForEpisodeType:(long long)arg1;	// IMP=0x00000001001627d8
+ (id)predicateForEpisodesImportedAfterDate:(id)arg1;	// IMP=0x0000000100162784
+ (id)predicateForEpisodeTitle:(id)arg1;	// IMP=0x0000000100162740
+ (id)predicateForHasValidPersistentId:(_Bool)arg1;	// IMP=0x000000010016263c
+ (id)predicateForPersistentIds:(id)arg1;	// IMP=0x00000001001625f8
+ (id)predicateForPersistentId:(id)arg1;	// IMP=0x00000001001625b4
+ (id)predicateForFeedURLs:(id)arg1;	// IMP=0x0000000100162518
+ (id)predicateForFeedURL:(id)arg1;	// IMP=0x00000001001624c4
+ (id)predicateForEpisodeGuids:(id)arg1;	// IMP=0x0000000100162438
+ (id)predicateForEpisodeGuid:(id)arg1;	// IMP=0x00000001001623f4
+ (id)predicateForEpisodeUuids:(id)arg1;	// IMP=0x0000000100162368
+ (id)predicateForEpisodeUuid:(id)arg1;	// IMP=0x0000000100162324
+ (id)predicateForHasBeenPlayed;	// IMP=0x0000000100162290
+ (id)predicateForRecentlyPlayed;	// IMP=0x0000000100162154
+ (id)predicateForExternalType:(_Bool)arg1;	// IMP=0x00000001001620c4
+ (id)predicateForMetadataFirstSyncEligible:(_Bool)arg1;	// IMP=0x0000000100162034
+ (id)predicateForAudio:(_Bool)arg1;	// IMP=0x0000000100161fa4
+ (id)predicateForVideo:(_Bool)arg1;	// IMP=0x0000000100161f14
+ (id)predicateForFeedDeleted:(_Bool)arg1;	// IMP=0x0000000100161e84
+ (id)predicateForIsFromiTunesSync:(_Bool)arg1;	// IMP=0x0000000100161df4
+ (id)predicateForDownloaded:(_Bool)arg1;	// IMP=0x0000000100161d88
+ (id)predicateForPlayStateManuallySet:(_Bool)arg1;	// IMP=0x0000000100161cf8
+ (id)predicateForListenNow;	// IMP=0x0000000100161b5c
+ (id)predicateForUserEpisodes;	// IMP=0x0000000100161ac8
+ (id)predicateForEpisodesOnUnplayedTab;	// IMP=0x0000000100161a34
+ (id)predicateForPreviouslyPlayedHidingFutureTimestamps;	// IMP=0x0000000100161960
+ (id)predicateForPreviouslyPlayed;	// IMP=0x0000000100161870
+ (id)predicateForVisuallyPlayed:(_Bool)arg1;	// IMP=0x00000001001617a4
+ (id)predicateForIsBackCatalogItem;	// IMP=0x00000001001616b8
+ (id)predicateForBacklog:(_Bool)arg1;	// IMP=0x0000000100161628
+ (id)predicateForSavedTab:(_Bool)arg1;	// IMP=0x000000010016155c
+ (id)predicateForUserEpisode:(_Bool)arg1;	// IMP=0x00000001001614cc
+ (id)predicateForUnplayedTabFlag:(_Bool)arg1;	// IMP=0x000000010016143c
+ (id)predicateForPlayed:(_Bool)arg1;	// IMP=0x0000000100161340
+ (id)predicateForExplicit:(_Bool)arg1;	// IMP=0x00000001001612b0
+ (id)predicateForSentNotification:(_Bool)arg1;	// IMP=0x0000000100161220
+ (id)predicateForIsNew:(_Bool)arg1;	// IMP=0x0000000100161190
+ (id)predicateForSuppressAutoDownload:(_Bool)arg1;	// IMP=0x0000000100161100
+ (id)predicateForSaved:(_Bool)arg1;	// IMP=0x0000000100161070
+ (id)predicateForPodcastIsHidden:(_Bool)arg1;	// IMP=0x0000000100160fe0
+ (id)predicateForSavedEpisodesOnPodcastUuid:(id)arg1;	// IMP=0x0000000100160f50
+ (id)predicateForAllEpisodesOnPodcastUuid:(id)arg1;	// IMP=0x0000000100160f0c
+ (id)predicateForLimittedEpisodesOnPodcastUuid:(id)arg1 determinedByLimit:(long long)arg2 deletePlayedEpisodes:(_Bool)arg3;	// IMP=0x0000000100160d38
+ (id)predicateForEpisodesDeterminedByLimitSettings:(long long)arg1;	// IMP=0x0000000100160b68
+ (id)userDefaultPropertiesAffectingPredicates;	// IMP=0x0000000100160ab0
+ (id)artworkForEpisodeUuid:(id)arg1 size:(struct CGSize)arg2;	// IMP=0x000000010017a5c0
- (id)metricsContentIdentifier;	// IMP=0x000000010001a1e8
@property(nonatomic) long long storeTrackId; // @dynamic storeTrackId;
- (_Bool)isCurrentPlayerItem;	// IMP=0x000000010001a0ac
- (_Bool)isSaved;	// IMP=0x000000010001a0a0
@property(nonatomic) _Bool saved; // @dynamic saved;
@property(nonatomic) _Bool listenNowEpisode; // @dynamic listenNowEpisode;
@property(nonatomic) double lastDatePlayed; // @dynamic lastDatePlayed;
@property(nonatomic) float playhead; // @dynamic playhead;
- (void)setPlayState:(long long)arg1 manually:(_Bool)arg2 source:(int)arg3;	// IMP=0x0000000100019494
- (void)setPlayed:(_Bool)arg1 manually:(_Bool)arg2 source:(int)arg3;	// IMP=0x000000010001947c
- (void)incremementPlayCount;	// IMP=0x0000000100019444
@property(nonatomic) long long playCount; // @dynamic playCount;
@property(nonatomic) _Bool metadataFirstSyncEligible; // @dynamic metadataFirstSyncEligible;
- (void)didChangePersistentID;	// IMP=0x0000000100019194
@property(retain, nonatomic) NSString *assetURL; // @dynamic assetURL;
@property(retain, nonatomic) NSString *uti; // @dynamic uti;
- (id)playedTextForCarplay;	// IMP=0x0000000100018c00
- (id)playedText;	// IMP=0x0000000100018a8c
- (void)_setValue:(id)arg1 forKey:(id)arg2 asynchronously:(_Bool)arg3;	// IMP=0x0000000100018814
- (id)lazyDescriptionWithHTML:(_Bool)arg1;	// IMP=0x000000010001855c
@property(retain, nonatomic) NSString *itemDescription; // @dynamic itemDescription;
@property(retain, nonatomic) NSString *itunesSubtitle; // @dynamic itunesSubtitle;
- (_Bool)isInPodcastDetailsUnplayedTab;	// IMP=0x00000001000180cc
- (_Bool)isInMyEpisodes;	// IMP=0x0000000100017fcc
- (unsigned long long)reasonForNotPlayable;	// IMP=0x0000000100017fb4
- (_Bool)isPlayable;	// IMP=0x0000000100017f90
- (_Bool)isRestricted;	// IMP=0x0000000100017f40
- (_Bool)isShareable;	// IMP=0x0000000100017ed4
@property(retain, nonatomic) NSString *author; // @dynamic author;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSString *guid; // @dynamic guid;
- (_Bool)isMedia;	// IMP=0x00000001000e14c8
- (_Bool)isExternalType;	// IMP=0x00000001000e14bc
- (_Bool)isAudio;	// IMP=0x00000001000e14b0
- (_Bool)isVideo;	// IMP=0x00000001000e14a4
- (void)setIsTopLevelEpisode:(_Bool)arg1;	// IMP=0x00000001000e1440
- (_Bool)isTopLevelEpisode;	// IMP=0x00000001000e1420
- (id)displayURL;	// IMP=0x00000001000e1330
- (id)playURL;	// IMP=0x00000001000e1240
- (long long)episodeTypeResolvedValue;	// IMP=0x00000001000e1150
- (_Bool)isTrailer;	// IMP=0x00000001000e112c
- (_Bool)isBonus;	// IMP=0x00000001000e1108
- (_Bool)isExplicit;	// IMP=0x00000001000e109c
- (id)bestUrl;	// IMP=0x00000001000e0f5c
- (void)_setAssetUrl:(id)arg1;	// IMP=0x00000001000e0edc
- (_Bool)isDownloaded;	// IMP=0x00000001000e0c9c
- (_Bool)isPlayheadPartiallyPlayed;	// IMP=0x00000001000e0c74
- (_Bool)isPlayheadResumable;	// IMP=0x00000001000e0c14
- (double)endOfTrack;	// IMP=0x00000001000e0bdc
- (double)timeRemaining;	// IMP=0x00000001000e0b90
- (double)playbackProgress;	// IMP=0x00000001000e0b28
- (_Bool)isPartiallyPlayedBackCatalogItem;	// IMP=0x00000001000e0adc
- (_Bool)isBackCatalogItem;	// IMP=0x00000001000e0a80
- (_Bool)isVisuallyPlayed;	// IMP=0x00000001000e0a38
- (_Bool)isUnplayed;	// IMP=0x00000001000e0a14
- (_Bool)isPartiallyPlayed;	// IMP=0x00000001000e09f0
- (_Bool)isPlayed;	// IMP=0x00000001000e09cc
- (id)bestSummary;	// IMP=0x00000001000e09c0
- (id)numberedTitle;	// IMP=0x00000001000e0860
- (id)bestTitle;	// IMP=0x00000001000e07ac
@property(nonatomic) double pubDate; // @dynamic pubDate;
@property(nonatomic) long long trackNum; // @dynamic trackNum;
@property(nonatomic) double duration; // @dynamic duration;
@property(nonatomic) long long seasonNumber; // @dynamic seasonNumber;
@property(nonatomic) long long episodeNumber; // @dynamic episodeNumber;
@property(retain, nonatomic) NSString *webpageURL; // @dynamic webpageURL;
@property(retain, nonatomic) NSString *episodeType; // @dynamic episodeType;
@property(retain, nonatomic) NSString *itunesTitle; // @dynamic itunesTitle;
@property(nonatomic) _Bool isNew; // @dynamic isNew;
@property(nonatomic) long long episodeLevel; // @dynamic episodeLevel;
@property(nonatomic) _Bool explicit; // @dynamic explicit;
@property(retain, nonatomic) NSString *podcastUuid; // @dynamic podcastUuid;
@property(retain, nonatomic) NSString *enclosureURL; // @dynamic enclosureURL;
@property(nonatomic) long long byteSize; // @dynamic byteSize;
@property(retain, nonatomic) NSString *cleanedTitle; // @dynamic cleanedTitle;
@property(nonatomic) _Bool feedDeleted; // @dynamic feedDeleted;
@property(nonatomic) long long persistentID; // @dynamic persistentID;
- (_Bool)isLatestEpisodeInPodcast;	// IMP=0x00000001000ec9d0
- (_Bool)isInUserEpisodes;	// IMP=0x00000001000ec8d0
@property(retain, nonatomic) MTPodcast *podcast; // @dynamic podcast;
- (_Bool)isEpisodeVisited;	// IMP=0x00000001001172b0
@property(readonly, nonatomic) id <MTEpisodeIdentifier> episodeIdentifier;
- (void)updateUPPTimestamp;	// IMP=0x0000000100165054
- (void)updateUPPIdentifierIfNeeded;	// IMP=0x0000000100164f30
- (id)playStatusImageForDarkBackground:(_Bool)arg1;	// IMP=0x000000010017a940
- (id)playStatusImageForTheme:(id)arg1;	// IMP=0x000000010017a850
- (id)playStatusImage;	// IMP=0x000000010017a840
- (id)artworkWithSize:(struct CGSize)arg1;	// IMP=0x000000010017a724

// Remaining properties
@property(nonatomic) _Bool audio; // @dynamic audio;
@property(nonatomic) _Bool backCatalog; // @dynamic backCatalog;
@property(retain, nonatomic) NSString *category; // @dynamic category;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) double downloadDate; // @dynamic downloadDate;
@property(retain, nonatomic) NSString *downloadPath; // @dynamic downloadPath;
@property(nonatomic) _Bool externalType; // @dynamic externalType;
@property(nonatomic) long long flags; // @dynamic flags;
@property(nonatomic) _Bool hasBeenPlayed; // @dynamic hasBeenPlayed;
@property(readonly) unsigned long long hash;
@property(nonatomic) double importDate; // @dynamic importDate;
@property(nonatomic) int importSource; // @dynamic importSource;
@property(nonatomic) _Bool isFromITunesSync; // @dynamic isFromITunesSync;
@property(nonatomic) _Bool itemDescriptionHasHTML; // @dynamic itemDescriptionHasHTML;
@property(retain, nonatomic) NSAttributedString *itemDescriptionWithHTML; // @dynamic itemDescriptionWithHTML;
@property(retain, nonatomic) NSString *itemDescriptionWithoutHTML; // @dynamic itemDescriptionWithoutHTML;
@property(nonatomic) double lastUserMarkedAsPlayedDate; // @dynamic lastUserMarkedAsPlayedDate;
@property(nonatomic) _Bool manuallyAdded; // @dynamic manuallyAdded;
@property(retain, nonatomic) NSString *metadataIdentifier; // @dynamic metadataIdentifier;
@property(nonatomic) double metadataTimestamp; // @dynamic metadataTimestamp;
@property(readonly, nonatomic) long long playState; // @dynamic playState;
@property(nonatomic) double playStateLastModifiedDate; // @dynamic playStateLastModifiedDate;
@property(readonly, nonatomic) _Bool playStateManuallySet; // @dynamic playStateManuallySet;
@property(readonly, nonatomic) long long playStateSource; // @dynamic playStateSource;
@property(retain, nonatomic) NSSet *playlists; // @dynamic playlists;
@property(retain, nonatomic) NSData *securityScopedAssetData; // @dynamic securityScopedAssetData;
@property(nonatomic) _Bool sentNotification; // @dynamic sentNotification;
@property(retain, nonatomic) NSSet *settings; // @dynamic settings;
@property(readonly) Class superclass;
@property(nonatomic) _Bool suppressAutoDownload; // @dynamic suppressAutoDownload;
@property(retain, nonatomic) MTSyncInfo *syncInfo; // @dynamic syncInfo;
@property(nonatomic) _Bool unplayedTab; // @dynamic unplayedTab;
@property(nonatomic) _Bool userDeleted; // @dynamic userDeleted;
@property(nonatomic) _Bool userEpisode; // @dynamic userEpisode;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;
@property(nonatomic) _Bool video; // @dynamic video;
@property(nonatomic) _Bool visible; // @dynamic visible;

@end

