//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface IMMemoryCache : NSObject
{
    _Bool _evictsItemsWithDiscardedContent;	// 8 = 0x8
    NSString *_name;	// 16 = 0x10
    id _delegate;	// 24 = 0x18
    unsigned long long _totalCostLimit;	// 32 = 0x20
    unsigned long long _countLimit;	// 40 = 0x28
    NSMutableArray *_itemsArray;	// 48 = 0x30
    NSMutableDictionary *_items;	// 56 = 0x38
    unsigned long long _totalCost;	// 64 = 0x40
    unsigned long long _count;	// 72 = 0x48
    NSOperationQueue *_queue;	// 80 = 0x50
    double _lastCheckTime;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_accessQueue;	// 96 = 0x60
}

- (void).cxx_destruct;	// IMP=0x00000001001b7fc0
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *accessQueue; // @synthesize accessQueue=_accessQueue;
@property(nonatomic) double lastCheckTime; // @synthesize lastCheckTime=_lastCheckTime;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(nonatomic) unsigned long long count; // @synthesize count=_count;
@property(nonatomic) unsigned long long totalCost; // @synthesize totalCost=_totalCost;
@property(retain, nonatomic) NSMutableDictionary *items; // @synthesize items=_items;
@property(retain, nonatomic) NSMutableArray *itemsArray; // @synthesize itemsArray=_itemsArray;
@property(nonatomic) unsigned long long countLimit; // @synthesize countLimit=_countLimit;
@property(nonatomic) unsigned long long totalCostLimit; // @synthesize totalCostLimit=_totalCostLimit;
@property(nonatomic) _Bool evictsItemsWithDiscardedContent; // @synthesize evictsItemsWithDiscardedContent=_evictsItemsWithDiscardedContent;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void)_removeObjectForKey:(id)arg1;	// IMP=0x00000001001b7dd0
- (void)_addItem:(id)arg1 forKey:(id)arg2;	// IMP=0x00000001001b7b84
- (id)description;	// IMP=0x00000001001b7948
- (long long)numberOfCachedItems;	// IMP=0x00000001001b7868
- (unsigned long long)costForObjectWithKey:(id)arg1;	// IMP=0x00000001001b7708
- (void)_checkLimits;	// IMP=0x00000001001b7650
- (void)_checkLimitsAndEvictObjects;	// IMP=0x00000001001b74ac
- (void)checkLimitsAndEvictObjects;	// IMP=0x00000001001b7444
- (_Bool)_shouldRemoveIndex:(unsigned long long)arg1;	// IMP=0x00000001001b7270
- (void)removeObjectsForKeyWithPrefix:(id)arg1;	// IMP=0x00000001001b704c
- (void)removeAllObjects;	// IMP=0x00000001001b6f4c
- (void)removeObjectForKey:(id)arg1;	// IMP=0x00000001001b6ea4
- (void)setObject:(id)arg1 forKey:(id)arg2 cost:(unsigned long long)arg3;	// IMP=0x00000001001b6df8
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00000001001b6d50
- (id)objectForKey:(id)arg1;	// IMP=0x00000001001b69f4
- (id)allKeys;	// IMP=0x00000001001b6898
- (id)init;	// IMP=0x00000001001b67a0

@end

