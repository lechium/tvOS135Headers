//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "CKKSCKRecordHolder.h"

@class CKKSAESSIVKey, CKKSKeychainBackedKey, CKKSWrappedAESSIVKey, NSString;
@protocol SecCKKSKeyClass, SecCKKSProcessedState;

__attribute__((visibility("hidden")))
@interface CKKSKey : CKKSCKRecordHolder
{
    _Bool _currentkey;	// 8 = 0x8
    CKKSKeychainBackedKey *_keycore;	// 16 = 0x10
    NSString<SecCKKSProcessedState> *_state;	// 24 = 0x18
}

+ (id)loadFromProtobuf:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c3900
+ (id)countsByClass:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c368c
+ (id)fromDatabaseRow:(id)arg1;	// IMP=0x00000001000c32f4
+ (id)sqlColumns;	// IMP=0x00000001000c322c
+ (id)sqlTable;	// IMP=0x00000001000c3220
+ (id)localKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c3118
+ (id)remoteKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c3010
+ (id)allKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c2f24
+ (id)currentKeysForClass:(id)arg1 state:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000c2db8
+ (id)currentKeyForClass:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c2ccc
+ (id)selfWrappedKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c2b64
+ (id)tryFromDatabaseAnyState:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c2a44
+ (id)tryFromDatabase:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c2910
+ (id)fromDatabaseAnyState:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c27f0
+ (id)fromDatabase:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c26bc
+ (id)isItemKeyForKeychainView:(struct SecDbItem *)arg1;	// IMP=0x00000001000c23e4
+ (id)keyFromKeychain:(id)arg1 parentKeyUUID:(id)arg2 keyclass:(id)arg3 state:(id)arg4 zoneID:(id)arg5 encodedCKRecord:(id)arg6 currentkey:(long long)arg7 error:(id *)arg8;	// IMP=0x00000001000c22a4
+ (id)randomKeyWrappedBySelf:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c21a0
+ (id)randomKeyWrappedByParent:(id)arg1 keyclass:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c204c
+ (id)randomKeyWrappedByParent:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c1fc0
+ (id)loadKeyWithUUID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c1f18
- (void).cxx_destruct;	// IMP=0x00000001000c1ed8
@property _Bool currentkey; // @synthesize currentkey=_currentkey;
@property(copy) NSString<SecCKKSProcessedState> *state; // @synthesize state=_state;
@property(retain) CKKSKeychainBackedKey *keycore; // @synthesize keycore=_keycore;
- (id)serializeAsProtobuf:(id *)arg1;	// IMP=0x00000001000c1c9c
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000001000c1bf0
- (id)sqlValues;	// IMP=0x00000001000c17e4
- (id)whereClauseToFindSelf;	// IMP=0x00000001000c169c
- (id)description;	// IMP=0x00000001000c1548
- (_Bool)matchesCKRecord:(id)arg1;	// IMP=0x00000001000c10f0
- (id)updateCKRecord:(id)arg1 zoneID:(id)arg2;	// IMP=0x00000001000c0dc0
- (void)setFromCKRecord:(id)arg1;	// IMP=0x00000001000c09ac
- (id)CKRecordName;	// IMP=0x00000001000c0958
- (_Bool)saveToDatabaseAsOnlyCurrentKeyForClassAndState:(id *)arg1;	// IMP=0x00000001000c0730
- (_Bool)deleteKeyMaterialFromKeychain:(id *)arg1;	// IMP=0x00000001000c06dc
- (_Bool)loadKeyMaterialFromKeychain:(id *)arg1;	// IMP=0x00000001000c0688
- (_Bool)saveKeyMaterialToKeychain:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000001000c0624
- (_Bool)saveKeyMaterialToKeychain:(id *)arg1;	// IMP=0x00000001000c05cc
- (id)decryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c0520
- (id)encryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c0474
- (id)unwrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c03ec
- (id)wrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c0364
- (_Bool)trySelfWrappedKeyCandidate:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c02e4
- (id)unwrapViaKeyHierarchy:(id *)arg1;	// IMP=0x00000001000bffac
- (id)ensureKeyLoaded:(id *)arg1;	// IMP=0x00000001000bfdb8
- (id)topKeyInAnyState:(id *)arg1;	// IMP=0x00000001000bfabc
- (_Bool)wrapUnder:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000bfa18
- (_Bool)wrapsSelf;	// IMP=0x00000001000bf9cc
@property(readonly) CKKSAESSIVKey *aessivkey;
@property(copy) CKKSWrappedAESSIVKey *wrappedkey;
@property(copy) NSString<SecCKKSKeyClass> *keyclass;
@property(retain) NSString *parentKeyUUID;
@property(retain) NSString *uuid;
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000001000bf59c
- (void)dealloc;	// IMP=0x00000001000bf568
- (id)initWithKeyCore:(id)arg1;	// IMP=0x00000001000bf494
- (id)initWithWrappedAESKey:(id)arg1 uuid:(id)arg2 parentKeyUUID:(id)arg3 keyclass:(id)arg4 state:(id)arg5 zoneID:(id)arg6 encodedCKRecord:(id)arg7 currentkey:(long long)arg8;	// IMP=0x00000001000bf318
- (id)initWrappedBy:(id)arg1 AESKey:(id)arg2 uuid:(id)arg3 keyclass:(id)arg4 state:(id)arg5 zoneID:(id)arg6 encodedCKRecord:(id)arg7 currentkey:(long long)arg8;	// IMP=0x00000001000bf14c
- (id)initSelfWrappedWithAESKey:(id)arg1 uuid:(id)arg2 keyclass:(id)arg3 state:(id)arg4 zoneID:(id)arg5 encodedCKRecord:(id)arg6 currentkey:(long long)arg7;	// IMP=0x00000001000befd0
- (id)init;	// IMP=0x00000001000bef9c

@end

