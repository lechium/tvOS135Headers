//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "TrustedPeersHelperProtocol-Protocol.h"

@protocol NSXPCProxyCreating;

__attribute__((visibility("hidden")))
@interface CuttlefishXPCWrapper : NSObject <TrustedPeersHelperProtocol>
{
    id <NSXPCProxyCreating> _cuttlefishXPCConnection;	// 8 = 0x8
}

+ (_Bool)retryable:(id)arg1;	// IMP=0x0000000100026bf0
- (void).cxx_destruct;	// IMP=0x0000000100022e64
@property(readonly) id <NSXPCProxyCreating> cuttlefishXPCConnection; // @synthesize cuttlefishXPCConnection=_cuttlefishXPCConnection;
- (void)getSupportAppInfoWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100022c80
- (void)requestHealthCheckWithContainer:(id)arg1 context:(id)arg2 requiresEscrowCheck:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100022aa0
- (void)pushHealthInquiryWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00000001000228c8
- (void)reportHealthWithContainer:(id)arg1 context:(id)arg2 stateMachineState:(id)arg3 trustState:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x00000001000226bc
- (void)setRecoveryKeyWithContainer:(id)arg1 context:(id)arg2 recoveryKey:(id)arg3 salt:(id)arg4 ckksKeys:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x0000000100022494
- (void)fetchTrustStateWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00000001000222bc
- (void)validatePeersWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00000001000220e4
- (void)fetchCurrentPolicyWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100021f0c
- (void)fetchPolicyDocumentsWithContainer:(id)arg1 context:(id)arg2 versions:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100021d18
- (void)fetchEscrowContentsWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100021b40
- (void)fetchViableBottlesWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100021968
- (void)updateTLKsWithContainer:(id)arg1 context:(id)arg2 ckksKeys:(id)arg3 tlkShares:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x000000010002175c
- (void)setPreapprovedKeysWithContainer:(id)arg1 context:(id)arg2 preapprovedKeys:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100021568
- (void)updateWithContainer:(id)arg1 context:(id)arg2 deviceName:(id)arg3 serialNumber:(id)arg4 osVersion:(id)arg5 policyVersion:(id)arg6 policySecrets:(id)arg7 reply:(CDUnknownBlockType)arg8;	// IMP=0x0000000100021314
- (void)attemptPreapprovedJoinWithContainer:(id)arg1 context:(id)arg2 ckksKeys:(id)arg3 tlkShares:(id)arg4 preapprovedKeys:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x00000001000210ec
- (void)preflightPreapprovedJoinWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100020f14
- (void)joinWithContainer:(id)arg1 context:(id)arg2 voucherData:(id)arg3 voucherSig:(id)arg4 ckksKeys:(id)arg5 tlkShares:(id)arg6 preapprovedKeys:(id)arg7 reply:(CDUnknownBlockType)arg8;	// IMP=0x0000000100020cc0
- (void)vouchWithRecoveryKeyWithContainer:(id)arg1 context:(id)arg2 recoveryKey:(id)arg3 salt:(id)arg4 tlkShares:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x0000000100020a98
- (void)preflightVouchWithRecoveryKeyWithContainer:(id)arg1 context:(id)arg2 recoveryKey:(id)arg3 salt:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x000000010002088c
- (void)vouchWithBottleWithContainer:(id)arg1 context:(id)arg2 bottleID:(id)arg3 entropy:(id)arg4 bottleSalt:(id)arg5 tlkShares:(id)arg6 reply:(CDUnknownBlockType)arg7;	// IMP=0x000000010002064c
- (void)preflightVouchWithBottleWithContainer:(id)arg1 context:(id)arg2 bottleID:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100020458
- (void)vouchWithContainer:(id)arg1 context:(id)arg2 peerID:(id)arg3 permanentInfo:(id)arg4 permanentInfoSig:(id)arg5 stableInfo:(id)arg6 stableInfoSig:(id)arg7 ckksKeys:(id)arg8 reply:(CDUnknownBlockType)arg9;	// IMP=0x00000001000201ec
- (void)establishWithContainer:(id)arg1 context:(id)arg2 ckksKeys:(id)arg3 tlkShares:(id)arg4 preapprovedKeys:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x000000010001ffc4
- (void)prepareWithContainer:(id)arg1 context:(id)arg2 epoch:(unsigned long long)arg3 machineID:(id)arg4 bottleSalt:(id)arg5 bottleID:(id)arg6 modelID:(id)arg7 deviceName:(id)arg8 serialNumber:(id)arg9 osVersion:(id)arg10 policyVersion:(id)arg11 policySecrets:(id)arg12 signingPrivKeyPersistentRef:(id)arg13 encPrivKeyPersistentRef:(id)arg14 reply:(CDUnknownBlockType)arg15;	// IMP=0x000000010001fca8
- (void)fetchEgoEpochWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001fad0
- (void)fetchAllowedMachineIDsWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001f8f8
- (void)removeAllowedMachineIDsWithContainer:(id)arg1 context:(id)arg2 machineIDs:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010001f704
- (void)addAllowedMachineIDsWithContainer:(id)arg1 context:(id)arg2 machineIDs:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010001f510
- (void)setAllowedMachineIDsWithContainer:(id)arg1 context:(id)arg2 allowedMachineIDs:(id)arg3 honorIDMSListChanges:(_Bool)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x000000010001f318
- (void)localResetWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001f140
- (void)resetWithContainer:(id)arg1 context:(id)arg2 resetReason:(long long)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010001ef60
- (void)trustStatusWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001ed88
- (void)distrustPeerIDsWithContainer:(id)arg1 context:(id)arg2 peerIDs:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010001eb94
- (void)departByDistrustingSelfWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001e9bc
- (void)dumpWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001e7e4
- (void)pingWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010001e664
- (id)initWithCuttlefishXPCConnection:(id)arg1;	// IMP=0x000000010001e5ec

@end

