//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "PidComponent.h"

#import "powerlogDataSource-Protocol.h"
#import "tGraphDataSource-Protocol.h"

@class NSArray;

@interface SupervisorControl : PidComponent <tGraphDataSource, powerlogDataSource>
{
    float hotspotTemperature;	// 68 = 0x44
    float previousHotSpotTemperature;	// 72 = 0x48
    float THERMAL_TRAP_LOAD;	// 76 = 0x4c
    float THERMAL_TRAP_SLEEP;	// 80 = 0x50
    float releaseHysteresis;	// 84 = 0x54
    int tState;	// 88 = 0x58
    struct ForcedThermalLevelStruct forcedThermalLevel[2];	// 92 = 0x5c
    struct ForcedThermalPressureLevelStruct forcedThermalPressureLevelLight;	// 116 = 0x74
    _Bool isEngagedWithHysteresis;	// 128 = 0x80
    struct __CFString *_powerlogKeyCE;	// 136 = 0x88
    float _targetNominal;	// 144 = 0x90
    NSArray *_maxLoadIndexTable;	// 152 = 0x98
    BOOL seedingSource;	// 160 = 0xa0
}

@property(nonatomic) float THERMAL_TRAP_SLEEP; // @synthesize THERMAL_TRAP_SLEEP;
@property(nonatomic) float THERMAL_TRAP_LOAD; // @synthesize THERMAL_TRAP_LOAD;
@property(readonly, nonatomic) float hotspotTemperature; // @synthesize hotspotTemperature;
- (int)getPowerlogFieldCurrentValue;	// IMP=0x0000000100039694
- (struct __CFString *)getPowerlogKey;	// IMP=0x0000000100039684
- (struct __CFString *)copyFieldCurrentValueForIndex:(int)arg1;	// IMP=0x0000000100039600
- (struct __CFString *)copyHeaderForIndex:(int)arg1;	// IMP=0x0000000100039594
- (int)numberOfFields;	// IMP=0x000000010003958c
- (void)resetTargetTemperature;	// IMP=0x0000000100039480
- (void)overrideTargetTemperature:(float)arg1;	// IMP=0x0000000100039380
- (_Bool)shouldEnforceLightThermalPressure;	// IMP=0x0000000100039334
- (_Bool)shouldForceThermalLevelForThreshold:(int)arg1;	// IMP=0x00000001000392cc
- (_Bool)didWeCrossTargetTemp;	// IMP=0x0000000100039288
- (_Bool)isHotspotFirstEngaged;	// IMP=0x0000000100039228
- (_Bool)hotspotIsEngaged;	// IMP=0x0000000100039218
- (int)getThermalStateofHotspot;	// IMP=0x0000000100039130
- (float)calculateTargetDifference;	// IMP=0x000000010003910c
- (int)computePackageCurrentSeedPower;	// IMP=0x0000000100038fcc
- (int)computePackageCEforSeedingSource:(unsigned char)arg1;	// IMP=0x0000000100038e74
- (unsigned char)chooseEffectiveSeedingSource;	// IMP=0x0000000100038d44
- (unsigned char)seedControlEffort;	// IMP=0x0000000100038ae4
- (unsigned char)releaseMaxLIForComponent:(int)arg1 releaseRate:(int)arg2;	// IMP=0x0000000100038a88
- (unsigned char)maxLIForComponent:(int)arg1;	// IMP=0x0000000100038a30
- (void)calculateControlEffort:(float)arg1 trigger:(float)arg2;	// IMP=0x000000010003893c
- (void)calculateControlEffort:(float)arg1;	// IMP=0x000000010003892c
- (void)updateHotSpotTemperatureAndStatus:(float)arg1;	// IMP=0x00000001000388d0
- (void)dealloc;	// IMP=0x000000010003889c
- (void)setDecisionTableSection:(id)arg1;	// IMP=0x0000000100038598
- (id)initWithMitigationType:(int)arg1 paramInfo:(struct __CFDictionary *)arg2;	// IMP=0x00000001000382d8

@end

