//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "MCProfileConnectionObserver-Protocol.h"

@class BluetoothManager, CNContact, CNContactStore, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSMutableString, NSNumber, NSSet, NSString, SDAirDropServer, SFPowerSource;

__attribute__((visibility("hidden")))
@interface SDStatusMonitor : NSObject <MCProfileConnectionObserver>
{
    _Bool _activateStarted;	// 8 = 0x8
    NSNumber *_airDropAllowed;	// 16 = 0x10
    int _airDropCount;	// 24 = 0x18
    int _airDropModeNotifyToken;	// 28 = 0x1c
    _Bool _airDropPublished;	// 32 = 0x20
    NSNumber *_backlightOn;	// 40 = 0x28
    int _backlightLevelToken;	// 48 = 0x30
    NSString *_bonjourName;	// 56 = 0x38
    _Bool _carplayConnected;	// 64 = 0x40
    NSMutableDictionary *_certificates;	// 72 = 0x48
    NSString *_computerName;	// 80 = 0x50
    NSNumber *_computerToComputer;	// 88 = 0x58
    NSString *_consoleUser;	// 96 = 0x60
    unsigned int _consoleUserID;	// 104 = 0x68
    CNContactStore *_contactStore;	// 112 = 0x70
    NSString *_currentDiscoverableMode;	// 120 = 0x78
    NSString *_deviceInformation;	// 128 = 0x80
    _Bool _deviceIsHighPriority;	// 136 = 0x88
    NSNumber *_deviceKeyBagState;	// 144 = 0x90
    NSNumber *_deviceKeyBagUnlocked;	// 152 = 0x98
    NSNumber *_deviceSupportsWAPI;	// 160 = 0xa0
    NSNumber *_deviceUIUnlocked;	// 168 = 0xa8
    _Bool _deviceWasUnlockedOnce;	// 176 = 0xb0
    struct __CFRunLoopSource *_dynamicStoreSource;	// 184 = 0xb8
    _Bool _finderAirDropEnabled;	// 192 = 0xc0
    SDAirDropServer *_finderServer;	// 200 = 0xc8
    NSNumber *_handoffVisible;	// 208 = 0xd0
    NSMutableDictionary *_identities;	// 216 = 0xd8
    int _keyBagUnlockToken;	// 224 = 0xe0
    NSNumber *_legacyModeEnabled;	// 232 = 0xe8
    NSString *_localHostName;	// 240 = 0xf0
    NSDictionary *_mountPoints;	// 248 = 0xf8
    NSString *_myAppleID;	// 256 = 0x100
    NSString *_myAppleIDCommonName;	// 264 = 0x108
    struct __SecIdentity *_myAppleIDSecIdentity;	// 272 = 0x110
    NSMutableString *_myEmailHashes;	// 280 = 0x118
    NSData *_myLegacyAirDropIcon;	// 288 = 0x120
    NSString *_myLegacyAirDropIconHash;	// 296 = 0x128
    NSMutableString *_myPhoneHashes;	// 304 = 0x130
    struct _DNSServiceRef_t *_nameMonitor;	// 312 = 0x138
    _Bool _needsExitForLocaleChange;	// 320 = 0x140
    NSString *_netbiosName;	// 328 = 0x148
    unsigned int _notifierObject;	// 336 = 0x150
    struct IONotificationPort *_notifyPortRef;	// 344 = 0x158
    NSDictionary *_odisksMountPoints;	// 352 = 0x160
    long long _pairedWatchWristState;	// 360 = 0x168
    NSNumber *_personalHotspotAutoState;	// 368 = 0x170
    _Bool _personalHotspotFamilyEnabled;	// 376 = 0x178
    NSMutableDictionary *_personalHotspotFamilyStates;	// 384 = 0x180
    NSNumber *_personalHotspotAllowed;	// 392 = 0x188
    struct __IOPMConnection *_pmConnection;	// 400 = 0x190
    NSMutableSet *_preventExitForLocaleReasons;	// 408 = 0x198
    unsigned int _rootPort;	// 416 = 0x1a0
    NSNumber *_screenOn;	// 424 = 0x1a8
    NSMutableDictionary *_serverNames;	// 432 = 0x1b0
    struct __SCPreferences *_smbPreferences;	// 440 = 0x1b8
    NSMutableDictionary *_ssidHashes;	// 448 = 0x1c0
    unsigned int _systemUIFlags;	// 456 = 0x1c8
    int _uiLockStatusToken;	// 460 = 0x1cc
    NSNumber *_wirelessAccessPoint;	// 464 = 0x1d0
    NSString *_workgroup;	// 472 = 0x1d8
    long long _watchWristState;	// 480 = 0x1e0
    NSString *_requestedDiscoverableMode;	// 488 = 0x1e8
    struct __WiFiDeviceClient *_wifiDevice;	// 496 = 0x1f0
    struct __WiFiDeviceClient *_awdlDevice;	// 504 = 0x1f8
    struct __WiFiManagerClient *_wifiManager;	// 512 = 0x200
    _Bool _wifiDeviceAttachmentRegistered;	// 520 = 0x208
    _Bool _wifiScheduledOnRunLoop;	// 521 = 0x209
    BluetoothManager *_bluetoothManager;	// 528 = 0x210
    int _screenBlankedToken;	// 536 = 0x218
    NSMutableDictionary *_longHashesToContactIdentifier;	// 544 = 0x220
    NSMutableDictionary *_mediumHashesToContactIdentifier;	// 552 = 0x228
    NSMutableSet *_shortHashes;	// 560 = 0x230
    _Bool _controlCenterVisible;	// 568 = 0x238
    _Bool _multipleUsersLoggedIn;	// 569 = 0x239
    CNContact *___meCard;	// 576 = 0x240
    NSDictionary *_awdlState;	// 584 = 0x248
    NSDate *_lastDarkWakeDate;	// 592 = 0x250
    NSSet *_effectiveBlacklistedAppBundleIDs;	// 600 = 0x258
}

+ (_Bool)enableOOBPCredentialLogging;	// IMP=0x000000010018aa0c
+ (_Bool)enableNewHashing;	// IMP=0x000000010018a9e0
+ (_Bool)isBuddyCompleted;	// IMP=0x000000010018a2dc
+ (_Bool)b332PairingEnabled;	// IMP=0x000000010018a254
+ (long long)shareSheetMaxSuggestions;	// IMP=0x0000000100189cd0
+ (double)b332BTAddressRotationDelay;	// IMP=0x0000000100188f30
+ (id)sharedMonitor;	// IMP=0x0000000100180d98
- (void).cxx_destruct;	// IMP=0x000000010018ded0
@property(readonly) _Bool multipleUsersLoggedIn; // @synthesize multipleUsersLoggedIn=_multipleUsersLoggedIn;
@property(readonly) _Bool controlCenterVisible; // @synthesize controlCenterVisible=_controlCenterVisible;
@property(readonly) NSSet *effectiveBlacklistedAppBundleIDs; // @synthesize effectiveBlacklistedAppBundleIDs=_effectiveBlacklistedAppBundleIDs;
@property(readonly) NSDate *lastDarkWakeDate; // @synthesize lastDarkWakeDate=_lastDarkWakeDate;
@property(readonly) NSDictionary *awdlState; // @synthesize awdlState=_awdlState;
- (void)logWiFiPowerState;	// IMP=0x000000010018ddc4
- (void)clearWirelessState;	// IMP=0x000000010018dd88
- (void)clearOperationModeInfo;	// IMP=0x000000010018dd40
- (void)installSSIDCacheMonitor;	// IMP=0x000000010018db10
- (void)installWiFiPasswordSharingMonitor;	// IMP=0x000000010018d9dc
- (void)handleWiFiPasswordSharingChanged;	// IMP=0x000000010018d9b4
- (id)stringForWatchWristState:(long long)arg1;	// IMP=0x000000010018d95c
@property(readonly) long long watchWristState;
- (void)updateWatchWristState:(long long)arg1;	// IMP=0x000000010018d850
- (void)installWristStateMonitor;	// IMP=0x000000010018d84c
- (void)installVolumesMonitor;	// IMP=0x000000010018d848
- (void)installUserPictureMonitor;	// IMP=0x000000010018d844
- (void)installUILockStatusMonitor;	// IMP=0x000000010018d840
- (void)installSystemUIMonitor;	// IMP=0x000000010018d83c
- (void)installSpringBoardStateMonitor;	// IMP=0x000000010018d6b4
- (_Bool)smbConfiguration:(struct __SCPreferences *)arg1 netBiosName:(id *)arg2 workgroup:(id *)arg3;	// IMP=0x000000010018d6ac
- (void)reloadSMBConfInfo;	// IMP=0x000000010018d558
- (void)installSMBPreferencesMonitor;	// IMP=0x000000010018d554
- (void)installSleepWakeCallBack;	// IMP=0x000000010018d4a0
- (void)installSleepNotification;	// IMP=0x000000010018d49c
- (void)handleSleepWakeCallBack:(unsigned int)arg1 messageArguement:(void *)arg2;	// IMP=0x000000010018d2c4
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x000000010018d2b8
@property(readonly) SFPowerSource *localPowerSource;
- (void)updateLocalPowerSource:(id)arg1;	// IMP=0x000000010018d224
- (void)handleMISStateChanged:(id)arg1;	// IMP=0x000000010018d1a4
- (void)installMISMonitor;	// IMP=0x000000010018d140
- (void)updatePairedWatchLockState:(int)arg1;	// IMP=0x000000010018d078
@property(readonly) int pairedWatchLockState;
- (void)updatePairedWatchWristState:(long long)arg1;	// IMP=0x000000010018cf7c
@property(readonly) long long pairedWatchWristState;
- (void)handleNameMonitorCallBack:(const char *)arg1 flags:(unsigned int)arg2 error:(int)arg3;	// IMP=0x000000010018cea0
- (void)updateBlacklistedAppBundleIDs;	// IMP=0x000000010018cd78
- (void)managedConfigurationSettingsChanged:(id)arg1;	// IMP=0x000000010018cd34
- (void)installManagedConfigurationMonitor;	// IMP=0x000000010018cc78
- (void)installLocaleChangeMonitor;	// IMP=0x000000010018caa4
- (void)installKeyBagUnlockMonitor;	// IMP=0x000000010018c928
- (void)installFinderSidebarPrefsMonitor;	// IMP=0x000000010018c924
- (void)installDynamicStoreCallBack;	// IMP=0x000000010018c6d8
- (void)handleDynamicStoreCallback:(struct __SCDynamicStore *)arg1 changedKeys:(struct __CFArray *)arg2;	// IMP=0x000000010018c418
- (void)installDisplaySleepMonitor;	// IMP=0x000000010018c414
- (void)installDisplayConfigurationMonitor;	// IMP=0x000000010018c410
- (void)installCoreTelephonyMonitor;	// IMP=0x000000010018c40c
- (void)installContactsMonitor;	// IMP=0x000000010018c28c
- (void)contactStoreDidChange:(id)arg1;	// IMP=0x000000010018c134
- (void)installClamshellStateChangeMonitor;	// IMP=0x000000010018c130
- (void)uninstallCarPlayStatusMonitor;	// IMP=0x000000010018c12c
- (void)installWirelessCarPlayMonitor;	// IMP=0x000000010018c128
- (void)installCarPlayStatusMonitor;	// IMP=0x000000010018c124
- (void)restartBonjourNameMonitor;	// IMP=0x000000010018c0d4
- (void)uninstallBonjourNameMonitor;	// IMP=0x000000010018c0a8
- (void)installBonjourNameMonitor;	// IMP=0x000000010018bf94
- (void)logBluetoothPowerState;	// IMP=0x000000010018bec4
- (void)logBluetoothAvailabilityState:(_Bool)arg1;	// IMP=0x000000010018be04
- (void)installBluetoothMonitor;	// IMP=0x000000010018bce8
- (void)bluetoothAvailabilityChange:(id)arg1;	// IMP=0x000000010018bc64
- (void)airplaneModeChanged;	// IMP=0x000000010018bc50
- (void)installAirplaneModeMonitor;	// IMP=0x000000010018bc4c
- (void)installBacklightMonitor;	// IMP=0x000000010018bc48
- (void)updateWirelessDevice;	// IMP=0x000000010018b578
- (void)installWirelessMonitor;	// IMP=0x000000010018b4ec
- (void)updateAWDLStateInfo;	// IMP=0x000000010018b4a4
- (void)handleAWDLState:(id)arg1;	// IMP=0x000000010018b2a0
- (void)installAppleIDAccountInfoMonitor;	// IMP=0x000000010018b1dc
- (void)appleIDAccountInfoChanged:(id)arg1;	// IMP=0x000000010018b134
- (void)installAppleIDUsernameMonitor;	// IMP=0x000000010018b0a4
- (void)logAirDropTransactionForClientServer:(_Bool)arg1 beginEnd:(_Bool)arg2 count:(int)arg3;	// IMP=0x000000010018afa4
- (void)installAirDropStatusMonitor;	// IMP=0x000000010018af20
- (void)airDropStatusChanged:(id)arg1;	// IMP=0x000000010018ae70
@property(readonly) _Bool wirelessCarPlay;
@property(readonly) _Bool wirelessAccessPoint;
@property(readonly) _Bool wifiUserPowerPreference;
@property(readonly) _Bool testDiskFull;
@property(readonly) _Bool signedIntoPrimaryiCloudAccount;
@property(readonly) _Bool showThisComputer;
@property(readonly) _Bool showMeInWormhole;
@property(readonly) _Bool screenOn;
@property(readonly) _Bool runningAsSetupUser;
@property(readonly) _Bool registerAllInterfaces;
@property(readonly) _Bool preferABImages;
@property(readonly) _Bool myAppleIDIsManaged;
@property(readonly) _Bool legacyModeSettable;
@property(readonly) _Bool legacyDevice;
@property(readonly) _Bool internetSharingEnabled;
@property(readonly) _Bool ignoreIconDiskCache;
@property(readonly) _Bool handoffVisible;
@property(readonly) _Bool forceP2P;
@property(readonly) _Bool forceAWDL;
@property(readonly) _Bool finderAirDropEnabled;
@property(readonly) _Bool enableXML;
@property(readonly) _Bool enableWebloc;
@property(readonly) _Bool enableStreamDebugging;
@property(readonly) _Bool enableStrangers;
@property(readonly) _Bool enablePKZip;
@property(readonly) _Bool forceLeashingAlertsWhenWiFiConnected;
@property(readonly) _Bool enableLeashing;
@property(readonly) _Bool enableHotspotFallback;
@property(readonly) _Bool enableDVZip;
@property(readonly) _Bool enableDemoMode;
@property(readonly) _Bool enableDebugMode;
@property(readonly) _Bool enableContinuity;
@property(readonly) _Bool enableBugs;
@property(readonly) _Bool enableAllRecents;
@property(readonly) _Bool enableAirDropReceiving;
@property(readonly) _Bool enableAirDropAdvertising;
@property(readonly) _Bool enableABImages;
@property(readonly) _Bool eduModeEnabled;
@property(readonly) _Bool dockHasDownloadsFolder;
@property(readonly) _Bool disableTLS;
@property(readonly) _Bool disableRotation;
@property(readonly) _Bool disableExtractMediaFromBundles;
@property(readonly) _Bool disableQuarantine;
@property(readonly) _Bool disablePipelining;
@property(readonly) _Bool disablePictureQuery;
@property(readonly) _Bool disablePeopleSuggestions;
@property(readonly) _Bool disableContinuityTLS;
@property(readonly) _Bool disableCompression;
@property(readonly) _Bool disableAutoAccept;
@property(readonly) _Bool deviceWasUnlockedOnce;
@property(readonly) _Bool deviceUIUnlocked;
@property(readonly) _Bool deviceSupportsWAPI;
@property(readonly) _Bool deviceSupportsRanging;
@property(readonly) _Bool deviceSupportsContinuity;
@property(readonly) _Bool deviceRequiresNewRanging;
@property(readonly) _Bool deviceKeyBagUnlocked;
@property(readonly) _Bool deviceKeyBagLocking;
@property(readonly) _Bool deviceKeyBagLocked;
@property(readonly) _Bool deviceKeyBagDisabled;
@property(readonly) _Bool currentConsoleUser;
@property(readonly) _Bool connectedEnabled;
@property(readonly) _Bool computerToComputer;
@property(readonly) _Bool coalesceMe;
@property(readonly) _Bool carplayConnected;
@property(readonly) _Bool bypassLTKeyAbort;
@property(readonly) _Bool browseAllInterfaces;
@property(readonly) _Bool broadcastPicture;
@property(readonly) _Bool bonjourEnabled;
@property(readonly) _Bool backlightOn;
@property(readonly) _Bool alwaysSendPayload;
@property(readonly) _Bool alwaysAutoAccept;
@property(readonly) _Bool altDSIDNeedsFixing;
@property(readonly) _Bool allEnabled;
@property(readonly, getter=isLegacyAirDropAvailable) _Bool legacyAirDropAvailable;
@property(readonly, getter=isAirDropAvailable) _Bool airdropAvailable;
- (void)updateAirDropAllowed;	// IMP=0x0000000100189f20
@property(readonly, getter=isAirDropAllowed) _Bool airdropAllowed;
@property(readonly) int workgroupThreshold;
@property(readonly) NSString *workgroup;
@property(readonly) unsigned int systemUIFlags;
@property(readonly) NSString *someComputerName;
@property(readonly) int sidebarMaxCount;
@property(readonly) NSString *netbiosName;
@property(readonly) NSData *myShortHashesForAirDrop;
@property(readonly) NSData *myMediumHashes;
@property(readonly) NSString *myPrimaryEmail;
@property(readonly) NSString *myGivenName;
@property(readonly) NSString *myName;
@property(readonly) NSString *myLegacyAirDropIconHash;
@property(readonly) NSData *myLegacyAirDropIcon;
@property(readonly) NSString *myEmail;
@property(readonly) NSDictionary *myAppleIDValidationRecord;
@property(readonly) NSArray *myAppleIDPhoneNumbers;
@property(readonly) NSString *myAppleIDPhoneHash;
@property(readonly) NSString *myAppleIDEmailHash;
@property(readonly) NSArray *myAppleIDEmailAddresses;
@property(readonly) NSString *myAppleIDCommonName;
- (id)_myAppleID;	// IMP=0x0000000100189238
@property(readonly) NSString *myAppleID;
@property(readonly) NSString *myAltDSID;
@property(readonly) NSString *myAccountAppleID;
@property(readonly) NSString *modelName;
@property(readonly) NSString *modelCode;
@property(readonly) int minPersonImageSize;
@property(readonly) int leashingTimeToWaitBeforeAlerting;
- (void)clearLocalHostName;	// IMP=0x0000000100188ef4
@property(readonly) NSString *localHostName;
@property(readonly) long long deviceKeyBagState;
@property(readonly) NSString *deviceInformation;
- (void)clearConsoleUser;	// IMP=0x000000010018897c
@property(readonly) NSString *consoleUser;
- (void)clearComputerName;	// IMP=0x00000001001888fc
@property(readonly) NSString *computerName;
@property(readonly) NSString *bonjourName;
- (id)awdlStateInfo;	// IMP=0x0000000100188750
@property(readonly) NSArray *awdlPeerList;
@property(readonly) NSDictionary *awdlInfo;
@property _Bool airplaneModeEnabled;
@property _Bool wirelessEnabled;
@property _Bool legacyModeEnabled;
@property __weak SDAirDropServer *finderServer;
@property _Bool bluetoothEnabled;
@property _Bool airDropPublished;
- (id)wifiSSIDForSSIDHash:(id)arg1;	// IMP=0x00000001001880d4
- (unsigned int)wifiPasswordSharingAvailability;	// IMP=0x0000000100187ef0
- (id)defaultWiFiDevice;	// IMP=0x0000000100187eb8
- (struct __WiFiManagerClient *)wifiManager;	// IMP=0x0000000100187eb0
- (_Bool)_multipleUsersLoggedIn;	// IMP=0x0000000100187ea8
- (void)postNotification:(id)arg1;	// IMP=0x0000000100187e98
- (void)postNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x0000000100187e08
- (void)removePreventExitForLocaleReason:(id)arg1;	// IMP=0x0000000100187cac
- (void)addPreventExitForLocaleReason:(id)arg1;	// IMP=0x0000000100187ba0
@property(readonly) _Bool simStateReady;
- (long long)signalStrength;	// IMP=0x0000000100187b90
- (void)updatePersonalHotspotAllowed;	// IMP=0x0000000100187aa4
@property(readonly) _Bool personalHotspotAllowed;
- (unsigned char)networkType;	// IMP=0x00000001001879fc
@property(readonly) _Bool familyHotspotEnabled;
- (void)updateFamilyHotspotState;	// IMP=0x00000001001872c4
- (long long)familyHotspotStateForAltDSID:(id)arg1;	// IMP=0x0000000100187228
- (_Bool)lteConnectionShows4G;	// IMP=0x0000000100187220
- (void)cellularDataEnabled:(_Bool *)arg1 airplaneMode:(_Bool *)arg2;	// IMP=0x000000010018720c
- (void)updateAutoHotspotState;	// IMP=0x0000000100187084
- (long long)autoHotspotState;	// IMP=0x0000000100187018
- (id)phoneNumbersForContact:(id)arg1;	// IMP=0x0000000100186e70
- (void)resetMeCardWithReason:(id)arg1;	// IMP=0x0000000100186d1c
@property(readonly, nonatomic) CNContact *meCard; // @synthesize meCard=___meCard;
- (id)instantMessageEmailsForContact:(id)arg1;	// IMP=0x000000010018695c
- (id)addressOrNumForHash:(id)arg1;	// IMP=0x000000010018673c
- (id)emailOrPhoneForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x0000000100186640
- (void)generateContactHashes;	// IMP=0x0000000100186034
- (id)emailsForContact:(id)arg1;	// IMP=0x0000000100185eb0
- (id)contactWithPhoneNumberOrEmail:(id)arg1;	// IMP=0x0000000100185b18
- (id)contactWithContactIdentifier:(id)arg1;	// IMP=0x00000001001857fc
- (_Bool)contactsContainsShortHashes:(id)arg1;	// IMP=0x000000010018564c
- (_Bool)contactIsBlocked:(id)arg1;	// IMP=0x0000000100185644
- (_Bool)contactIdentifierIsBlocked:(id)arg1;	// IMP=0x000000010018563c
- (id)contactIdentifierForMediumHashes:(id)arg1;	// IMP=0x00000001001854c0
- (id)contactForCombinedHash:(id)arg1;	// IMP=0x0000000100185280
- (id)contactForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x0000000100185184
- (void)clearMyIconAndHash;	// IMP=0x0000000100185098
- (void)clearContactsInfo;	// IMP=0x0000000100185038
- (void)addPhoneNumbers:(id)arg1 toLongHashes:(id)arg2 andMediumHashes:(id)arg3 andShortHashes:(id)arg4 forContactIdentifier:(id)arg5;	// IMP=0x0000000100184c98
- (void)addEmails:(id)arg1 toLongHashes:(id)arg2 andMediumHashes:(id)arg3 andShortHashes:(id)arg4 forContactIdentifier:(id)arg5;	// IMP=0x0000000100184890
- (id)addAdditionalInformationToMeCard:(id)arg1;	// IMP=0x000000010018420c
- (id)awdlNetwork;	// IMP=0x0000000100184078
- (id)awdlInfoForPeerWithServiceName:(id)arg1;	// IMP=0x0000000100183dd8
- (id)awdlDevice;	// IMP=0x0000000100183da0
- (id)verifiedIdentityForAppleID:(id)arg1;	// IMP=0x0000000100183d08
- (id)unifiedAppleIDInfo;	// IMP=0x0000000100183830
- (id)phoneNumbersForAppleID:(id)arg1;	// IMP=0x0000000100183768
- (void)hsa2EnabledWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100183500
- (void)handleAppleAccountSignOut;	// IMP=0x0000000100183468
- (void)handleAppleAccountSignIn;	// IMP=0x00000001001833d0
- (void)fixAltDSIDIfNeeded;	// IMP=0x00000001001830f0
- (id)emailAddressesForAppleID:(id)arg1;	// IMP=0x0000000100183028
- (struct __SecIdentity *)_copyMyAppleIDSecIdentity;	// IMP=0x0000000100182f88
- (struct __SecIdentity *)copyMyAppleIDSecIdentity;	// IMP=0x0000000100182f3c
- (struct __SecCertificate *)copyMyAppleIDCertificate;	// IMP=0x0000000100182ec0
- (struct __SecCertificate *)copyCertificateForRealName:(id)arg1;	// IMP=0x0000000100182e28
- (id)commonNameForCertificate:(struct __SecCertificate *)arg1;	// IMP=0x0000000100182d64
- (void)clearMyAppleIDInfo;	// IMP=0x0000000100182c58
- (void)cacheIdentity:(id)arg1;	// IMP=0x0000000100182b88
- (void)cacheCertificate:(struct __SecCertificate *)arg1 forRealName:(id)arg2;	// IMP=0x0000000100182ad4
- (_Bool)verifyAndParseValidationRecordData:(id)arg1 intoDictionary:(out id *)arg2;	// IMP=0x000000010018275c
- (long long)appleIDAccountState;	// IMP=0x00000001001824f4
- (void)updateDiscoverableMode;	// IMP=0x0000000100182240
- (void)setServerMountPoints:(id)arg1;	// IMP=0x00000001001821a8
@property(retain) NSString *discoverableMode;
- (void)setODiskMountPoints:(id)arg1;	// IMP=0x000000010018209c
- (id)serverNameForHost:(id)arg1;	// IMP=0x0000000100181fe4
- (void)removeServerName:(id)arg1;	// IMP=0x0000000100181f50
- (id)reconciledDiscoverableMode;	// IMP=0x0000000100181dc8
- (id)odiskMountPointsForServer:(id)arg1;	// IMP=0x0000000100181d38
- (id)newDiscoverableMode;	// IMP=0x0000000100181a04
- (id)mountPointsForServer:(id)arg1;	// IMP=0x0000000100181974
- (_Bool)isAirDropReady;	// IMP=0x000000010018181c
- (int)discoverableLevel;	// IMP=0x000000010018176c
- (id)defaultDiscoverableMode;	// IMP=0x000000010018174c
- (id)createHostNameKey:(id)arg1;	// IMP=0x0000000100181694
- (void)airDropTransactionEnd:(_Bool)arg1;	// IMP=0x000000010018158c
- (void)airDropTransactionBegin:(_Bool)arg1;	// IMP=0x0000000100181500
- (void)addServerName:(id)arg1 forHostName:(id)arg2;	// IMP=0x0000000100181434
- (void)clearMonitorCache;	// IMP=0x00000001001812d4
- (void)activate;	// IMP=0x0000000100181034
- (id)init;	// IMP=0x0000000100180e1c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

