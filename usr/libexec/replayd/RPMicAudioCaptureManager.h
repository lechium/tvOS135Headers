//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDate;
@protocol OS_dispatch_queue;

@interface RPMicAudioCaptureManager : NSObject
{
    _Bool _recordingMicrophone;	// 8 = 0x8
    _Bool _sessionInProgress;	// 9 = 0x9
    _Bool _micInterrupted;	// 10 = 0xa
    CDUnknownBlockType _microphoneOutputHandler;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_audioDispatchQueue;	// 24 = 0x18
    NSDate *_lastMicAudioDate;	// 32 = 0x20
    CDUnknownBlockType _micDidStartHandler;	// 40 = 0x28
    CDStruct_1b6d18a9 _micInterruptionPresentationTimeStamp;	// 48 = 0x30
    struct AudioStreamBasicDescription _audioBasicDescription;	// 72 = 0x48
}

+ (_Bool)hasAudioCaptureDevice;	// IMP=0x0000000100004998
- (void).cxx_destruct;	// IMP=0x0000000100004f30
@property(copy, nonatomic) CDUnknownBlockType micDidStartHandler; // @synthesize micDidStartHandler=_micDidStartHandler;
@property(nonatomic) _Bool micInterrupted; // @synthesize micInterrupted=_micInterrupted;
@property(nonatomic) CDStruct_1b6d18a9 micInterruptionPresentationTimeStamp; // @synthesize micInterruptionPresentationTimeStamp=_micInterruptionPresentationTimeStamp;
@property(retain, nonatomic) NSDate *lastMicAudioDate; // @synthesize lastMicAudioDate=_lastMicAudioDate;
@property _Bool sessionInProgress; // @synthesize sessionInProgress=_sessionInProgress;
@property(nonatomic, getter=isRecordingMicrophone) _Bool recordingMicrophone; // @synthesize recordingMicrophone=_recordingMicrophone;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *audioDispatchQueue; // @synthesize audioDispatchQueue=_audioDispatchQueue;
@property(nonatomic) struct AudioStreamBasicDescription audioBasicDescription; // @synthesize audioBasicDescription=_audioBasicDescription;
@property(copy, nonatomic) CDUnknownBlockType microphoneOutputHandler; // @synthesize microphoneOutputHandler=_microphoneOutputHandler;
- (void)stopMicrophoneCapture;	// IMP=0x0000000100004e28
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000100004cf8
- (void)startMicrophoneCaptureWithOutput:(CDUnknownBlockType)arg1 didStartHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100004c9c
- (void)stopAllCapture;	// IMP=0x0000000100004c40
- (void)stopCaptureSession;	// IMP=0x0000000100004c3c
- (void)startCaptureSession;	// IMP=0x0000000100004c38
- (void)dealloc;	// IMP=0x0000000100004bb0
- (id)initWithAudioStreamBasicDescription:(struct AudioStreamBasicDescription)arg1 audioQueue:(id)arg2;	// IMP=0x0000000100004ad0
- (void)handleAudioSessionInterruption:(id)arg1;	// IMP=0x00000001000049a0

@end

