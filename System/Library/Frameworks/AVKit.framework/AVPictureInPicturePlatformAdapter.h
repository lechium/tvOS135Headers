/*
* This header is generated by classdump-dyld 1.0
* on Sunday, June 7, 2020 at 11:24:39 AM Mountain Standard Time
* Operating System: Version 13.4.5 (Build 17L562)
* Image Source: /System/Library/Frameworks/AVKit.framework/AVKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVKit/AVKit-Structs.h>
#import <AVKit/AVPictureInPictureViewControllerDelegate.h>
#import <libobjc.A.dylib/PGPictureInPictureProxyDelegate.h>
#import <libobjc.A.dylib/PBSPictureInPictureControllerObserver.h>
#import <AVKit/AVPictureInPictureControlsStyleAppearance.h>

@protocol AVPictureInPicturePlatformAdapterDelegate, AVPictureInPictureContentSource;
@class AVPlayerController, AVPictureInPictureViewController, NSUUID, PGPictureInPictureProxy, NSTimer, _AVSimplePlayerLayerView, AVObservationController, NSString;

@interface AVPictureInPicturePlatformAdapter : NSObject <AVPictureInPictureViewControllerDelegate, PGPictureInPictureProxyDelegate, PBSPictureInPictureControllerObserver, AVPictureInPictureControlsStyleAppearance> {

	BOOL _allowsPictureInPicturePlayback;
	BOOL _alwaysStartsAutomaticallyWhenEnteringBackground;
	BOOL _anyPictureInPictureActive;
	BOOL _shouldUnmuteAudioWhenPictureInPictureStops;
	BOOL _animatingSwap;
	id<AVPictureInPicturePlatformAdapterDelegate> _delegate;
	AVPlayerController* _playerController;
	long long _controlsStyle;
	AVPictureInPictureViewController* _pictureInPictureViewController;
	NSUUID* _adapterIdentifier;
	PGPictureInPictureProxy* _pegasusProxy;
	NSTimer* _layoutCheckTimer;
	_AVSimplePlayerLayerView* _mirroredPlayerLayerView;
	id<AVPictureInPictureContentSource> _source;
	AVObservationController* _observationController;
	long long _statusStorage;
	CGRect _videoRectInScreen;

}

@property (assign,nonatomic) long long status; 
@property (nonatomic,readonly) NSUUID * adapterIdentifier;                                                               //@synthesize adapterIdentifier=_adapterIdentifier - In the implementation block
@property (nonatomic,readonly) PGPictureInPictureProxy * pegasusProxy;                                                   //@synthesize pegasusProxy=_pegasusProxy - In the implementation block
@property (assign,nonatomic) CGRect videoRectInScreen;                                                                   //@synthesize videoRectInScreen=_videoRectInScreen - In the implementation block
@property (nonatomic,readonly) NSTimer * layoutCheckTimer;                                                               //@synthesize layoutCheckTimer=_layoutCheckTimer - In the implementation block
@property (assign,nonatomic) BOOL shouldUnmuteAudioWhenPictureInPictureStops;                                            //@synthesize shouldUnmuteAudioWhenPictureInPictureStops=_shouldUnmuteAudioWhenPictureInPictureStops - In the implementation block
@property (assign,getter=isAnyPictureInPictureActive,nonatomic) BOOL anyPictureInPictureActive;                          //@synthesize anyPictureInPictureActive=_anyPictureInPictureActive - In the implementation block
@property (assign,getter=isAnimatingSwap,nonatomic) BOOL animatingSwap;                                                  //@synthesize animatingSwap=_animatingSwap - In the implementation block
@property (nonatomic,retain) _AVSimplePlayerLayerView * mirroredPlayerLayerView;                                         //@synthesize mirroredPlayerLayerView=_mirroredPlayerLayerView - In the implementation block
@property (nonatomic,__weak,readonly) id<AVPictureInPictureContentSource> source;                                        //@synthesize source=_source - In the implementation block
@property (nonatomic,readonly) AVObservationController * observationController;                                          //@synthesize observationController=_observationController - In the implementation block
@property (assign,nonatomic) long long statusStorage;                                                                    //@synthesize statusStorage=_statusStorage - In the implementation block
@property (assign,nonatomic,__weak) id<AVPictureInPicturePlatformAdapterDelegate> delegate;                              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) AVPlayerController * playerController;                                                      //@synthesize playerController=_playerController - In the implementation block
@property (assign,nonatomic) BOOL allowsPictureInPicturePlayback;                                                        //@synthesize allowsPictureInPicturePlayback=_allowsPictureInPicturePlayback - In the implementation block
@property (getter=isSystemPictureInPicturePossible,nonatomic,readonly) BOOL systemPictureInPicturePossible; 
@property (assign,nonatomic) BOOL alwaysStartsAutomaticallyWhenEnteringBackground;                                       //@synthesize alwaysStartsAutomaticallyWhenEnteringBackground=_alwaysStartsAutomaticallyWhenEnteringBackground - In the implementation block
@property (assign,nonatomic) long long controlsStyle;                                                                    //@synthesize controlsStyle=_controlsStyle - In the implementation block
@property (nonatomic,readonly) BOOL canAnimatePictureInPictureTransition; 
@property (nonatomic,readonly) AVPictureInPictureViewController * pictureInPictureViewController;                        //@synthesize pictureInPictureViewController=_pictureInPictureViewController - In the implementation block
@property (nonatomic,readonly) long long status; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isPictureInPictureSupported;
+(BOOL)showsDebugBorders;
+(void)setShouldUnsetMixabilityWhenExitingPIP:(BOOL)arg1 ;
+(BOOL)shouldUnsetMixabilityWhenExitingPIP;
+(id)activeAdapters;
+(id)playingAdapters;
+(id)startPictureInPictureButtonImageName;
+(id)stopPictureInPictureButtonImageName;
+(BOOL)prohibitsUnmutingWhilePIPIsActive;
-(void)dealloc;
-(id<AVPictureInPicturePlatformAdapterDelegate>)delegate;
-(void)setDelegate:(id<AVPictureInPicturePlatformAdapterDelegate>)arg1 ;
-(id<AVPictureInPictureContentSource>)source;
-(long long)status;
-(void)setStatus:(long long)arg1 ;
-(id)initWithSource:(id)arg1 ;
-(void)setControlsStyle:(long long)arg1 ;
-(long long)controlsStyle;
-(long long)pictureInPictureProxyInterfaceOrientationForTransitionAnimation:(id)arg1 ;
-(CGRect)pictureInPictureProxyViewFrameForTransitionAnimation:(id)arg1 ;
-(void)pictureInPictureProxy:(id)arg1 willStartPictureInPictureWithAnimationType:(long long)arg2 ;
-(void)pictureInPictureProxy:(id)arg1 didStartPictureInPictureWithAnimationType:(long long)arg2 ;
-(void)pictureInPictureProxy:(id)arg1 failedToStartPictureInPictureWithAnimationType:(long long)arg2 error:(id)arg3 ;
-(void)pictureInPictureProxy:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(/*^block*/id)arg2 ;
-(void)pictureInPictureProxy:(id)arg1 willStopPictureInPictureWithAnimationType:(long long)arg2 reason:(long long)arg3 ;
-(void)pictureInPictureProxy:(id)arg1 didStopPictureInPictureWithAnimationType:(long long)arg2 reason:(long long)arg3 ;
-(void)pictureInPictureProxyPictureInPictureInterruptionBegan:(id)arg1 ;
-(void)pictureInPictureProxyPictureInPictureInterruptionEnded:(id)arg1 ;
-(void)startPictureInPicture;
-(void)stopPictureInPictureAndRestoreUserInterface:(BOOL)arg1 ;
-(BOOL)allowsPictureInPicturePlayback;
-(void)setAllowsPictureInPicturePlayback:(BOOL)arg1 ;
-(void)setPlayerController:(AVPlayerController *)arg1 ;
-(AVPlayerController *)playerController;
-(void)_updateStatus;
-(void)_updateStatusUsingProposedStatus:(long long)arg1 ;
-(AVPictureInPictureViewController *)pictureInPictureViewController;
-(AVObservationController *)observationController;
-(void)pictureInPictureControllerDidActivatePictureInPicture:(id)arg1 ;
-(void)pictureInPictureControllerDidDestroyPictureInPicture:(id)arg1 ;
-(void)pictureInPictureViewControllerViewDidAppear:(id)arg1 ;
-(void)pictureInPictureViewControllerViewWillDisappear:(id)arg1 ;
-(BOOL)canAnimatePictureInPictureTransition;
-(BOOL)isSystemPictureInPicturePossible;
-(void)setPlaybackProgress:(double)arg1 playbackRate:(float)arg2 loadedTimeRanges:(id)arg3 ;
-(void)setAlwaysStartsAutomaticallyWhenEnteringBackground:(BOOL)arg1 ;
-(void)updateLayoutDependentBehaviors;
-(void)_updateSessionMixabilityForPIPStart;
-(void)_updateSessionMixabilityForPIPStop;
-(void)_addMixabilityOption;
-(void)_removeMixabilityOption;
-(void)_cleanupMirroredPlayerLayerViewIfNeeded;
-(BOOL)alwaysStartsAutomaticallyWhenEnteringBackground;
-(BOOL)isAnyPictureInPictureActive;
-(void)setAnyPictureInPictureActive:(BOOL)arg1 ;
-(NSUUID *)adapterIdentifier;
-(PGPictureInPictureProxy *)pegasusProxy;
-(CGRect)videoRectInScreen;
-(void)setVideoRectInScreen:(CGRect)arg1 ;
-(NSTimer *)layoutCheckTimer;
-(BOOL)shouldUnmuteAudioWhenPictureInPictureStops;
-(void)setShouldUnmuteAudioWhenPictureInPictureStops:(BOOL)arg1 ;
-(BOOL)isAnimatingSwap;
-(void)setAnimatingSwap:(BOOL)arg1 ;
-(_AVSimplePlayerLayerView *)mirroredPlayerLayerView;
-(void)setMirroredPlayerLayerView:(_AVSimplePlayerLayerView *)arg1 ;
-(long long)statusStorage;
-(void)setStatusStorage:(long long)arg1 ;
@end

