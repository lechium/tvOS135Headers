/*
* This header is generated by classdump-dyld 1.0
* on Sunday, June 7, 2020 at 11:24:08 AM Mountain Standard Time
* Operating System: Version 13.4.5 (Build 17L562)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/MPVolumeControllerDataSource.h>

@protocol MPVolumeControllerDataSourceDelegate;
@class NSString, AVSystemController;

@interface MPVolumeControllerSystemDataSource : NSObject <MPVolumeControllerDataSource> {

	BOOL _debugVolumeWarning;
	BOOL _volumeInitialized;
	BOOL _volumeControlCapabilitiesInitialized;
	AVSystemController* _avSystemController;
	BOOL _volumeControlAvailable;
	BOOL _muted;
	BOOL _volumeWarningEnabled;
	float _volume;
	float _EUVolumeLimit;
	NSString* _volumeAudioCategory;
	id<MPVolumeControllerDataSourceDelegate> _delegate;
	NSString* _volumeControlLabel;
	long long _volumeWarningState;

}

@property (nonatomic,copy) NSString * volumeAudioCategory;                                               //@synthesize volumeAudioCategory=_volumeAudioCategory - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<MPVolumeControllerDataSourceDelegate> delegate;                   //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) BOOL applicationShouldOverrideHardwareVolumeBehavior; 
@property (nonatomic,copy,readonly) NSString * volumeControlLabel;                                       //@synthesize volumeControlLabel=_volumeControlLabel - In the implementation block
@property (getter=isVolumeControlAvailable,nonatomic,readonly) BOOL volumeControlAvailable;              //@synthesize volumeControlAvailable=_volumeControlAvailable - In the implementation block
@property (assign,nonatomic) float volume;                                                               //@synthesize volume=_volume - In the implementation block
@property (assign,getter=isMuted,nonatomic) BOOL muted;                                                  //@synthesize muted=_muted - In the implementation block
@property (nonatomic,readonly) BOOL volumeWarningEnabled;                                                //@synthesize volumeWarningEnabled=_volumeWarningEnabled - In the implementation block
@property (nonatomic,readonly) long long volumeWarningState;                                             //@synthesize volumeWarningState=_volumeWarningState - In the implementation block
@property (nonatomic,readonly) float EUVolumeLimit;                                                      //@synthesize EUVolumeLimit=_EUVolumeLimit - In the implementation block
-(NSString *)description;
-(id)init;
-(void)dealloc;
-(id<MPVolumeControllerDataSourceDelegate>)delegate;
-(void)setDelegate:(id<MPVolumeControllerDataSourceDelegate>)arg1 ;
-(void)_setup;
-(void)reload;
-(void)_tearDown;
-(float)volume;
-(void)setVolume:(float)arg1 ;
-(BOOL)isMuted;
-(void)setMuted:(BOOL)arg1 ;
-(BOOL)isVolumeControlAvailable;
-(void)_volumeDidChangeNotification:(id)arg1 ;
-(NSString *)volumeAudioCategory;
-(NSString *)volumeControlLabel;
-(void)_mediaServerDiedNotification:(id)arg1 ;
-(void)reloadWarning;
-(void)adjustVolumeValue:(float)arg1 ;
-(void)initializeVolume;
-(void)getVolumeValueWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)applicationShouldOverrideHardwareVolumeBehavior;
-(BOOL)volumeWarningEnabled;
-(long long)volumeWarningState;
-(float)EUVolumeLimit;
-(void)setVolumeAudioCategory:(NSString *)arg1 ;
-(void)updateVolume:(float)arg1 ;
-(void)updateVolumeControlCapabilities:(unsigned)arg1 ;
-(id)_mediaPlaybackVolumeAudioCategory;
-(id)_reloadQueue;
-(void)_EUVolumeLimitDidChange:(id)arg1 ;
-(void)_EUVolumeLimitEnforcedDidChange:(id)arg1 ;
-(void)_routeDidChangeNotification:(id)arg1 ;
-(void)_updateRouteLabelForRoute:(id)arg1 ;
-(void)_volumeControlCapabilitiesDidChangeNotification:(id)arg1 ;
-(void)_systemVolumeDidChange:(id)arg1 ;
-(void)_systemMuteDidChange:(id)arg1 ;
-(void)_reloadEUVolumeLimits;
-(float)_volumeApplyingEUVolumePolicyToVolume:(float)arg1 ;
@end

