/*
* This header is generated by classdump-dyld 1.0
* on Sunday, June 7, 2020 at 11:16:18 AM Mountain Standard Time
* Operating System: Version 13.4.5 (Build 17L562)
* Image Source: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <MediaRemote/MediaRemote-Structs.h>
@class NSString, _MROriginProtobuf, _MRDeviceInfoMessageProtobuf, MRSupportedProtocolMessages;

@interface MRExternalDevice : NSObject {

	BOOL _valid;
	BOOL _usingSystemPairing;
	unsigned _connectionState;

}

@property (nonatomic,readonly) NSString * name; 
@property (nonatomic,readonly) NSString * hostName; 
@property (nonatomic,readonly) long long port; 
@property (nonatomic,readonly) _MROriginProtobuf * customOrigin; 
@property (nonatomic,readonly) _MRDeviceInfoMessageProtobuf * deviceInfo; 
@property (nonatomic,readonly) MRSupportedProtocolMessages * supportedMessages; 
@property (assign,nonatomic) BOOL wantsNowPlayingNotifications; 
@property (assign,nonatomic) BOOL wantsNowPlayingArtworkNotifications; 
@property (assign,nonatomic) BOOL wantsVolumeNotifications; 
@property (assign,nonatomic) BOOL wantsOutputDeviceNotifications; 
@property (getter=isValid,nonatomic,readonly) BOOL valid;                                      //@synthesize valid=_valid - In the implementation block
@property (nonatomic,readonly) unsigned connectionState;                                       //@synthesize connectionState=_connectionState - In the implementation block
@property (getter=isPaired,nonatomic,readonly) BOOL paired; 
@property (assign,getter=isUsingSystemPairing,nonatomic) BOOL usingSystemPairing;              //@synthesize usingSystemPairing=_usingSystemPairing - In the implementation block
-(NSString *)name;
-(BOOL)isValid;
-(long long)port;
-(id)_init;
-(NSString *)hostName;
-(_MRDeviceInfoMessageProtobuf *)deviceInfo;
-(void)outputDeviceVolume:(id)arg1 queue:(id)arg2 completion:(/*^block*/id)arg3 ;
-(MRSupportedProtocolMessages *)supportedMessages;
-(void)setUsingSystemPairing:(BOOL)arg1 ;
-(void)connectWithOptions:(unsigned)arg1 ;
-(void)disconnect:(id)arg1 ;
-(void)unpair;
-(void)sendCustomData:(id)arg1 withName:(id)arg2 ;
-(BOOL)wantsNowPlayingNotifications;
-(void)setWantsNowPlayingNotifications:(BOOL)arg1 ;
-(BOOL)wantsVolumeNotifications;
-(void)setWantsVolumeNotifications:(BOOL)arg1 ;
-(BOOL)wantsOutputDeviceNotifications;
-(void)setWantsOutputDeviceNotifications:(BOOL)arg1 ;
-(unsigned)connectionState;
-(BOOL)isPaired;
-(BOOL)isUsingSystemPairing;
-(_MROriginProtobuf *)customOrigin;
-(void)setPairingCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(void)setConnectionStateCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(void)setNameCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(void)setPairingAllowedCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(void)setCustomDataCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(void)setVolumeCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(void)setOutputDeviceVolume:(float)arg1 outputDeviceUID:(id)arg2 queue:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)outputDeviceVolumeControlCapabilities:(id)arg1 queue:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)modifyOutputContextOfType:(unsigned)arg1 addingDeviceUIDs:(id)arg2 removingDeviceUIDs:(id)arg3 settingDeviceUIDs:(id)arg4 withReplyQueue:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)ping:(double)arg1 callback:(/*^block*/id)arg2 withQueue:(id)arg3 ;
-(void)sendButtonEvent:(MRHIDButtonEvent)arg1 ;
-(void)sendClientUpdatesConfigMessage;
-(BOOL)wantsNowPlayingArtworkNotifications;
-(id)errorForCurrentState;
-(id)currentClientUpdatesConfigMessage;
-(void)setWantsNowPlayingArtworkNotifications:(BOOL)arg1 ;
@end

