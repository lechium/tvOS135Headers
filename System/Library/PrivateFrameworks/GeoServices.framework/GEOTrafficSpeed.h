/*
* This header is generated by classdump-dyld 1.0
* on Sunday, June 7, 2020 at 11:15:14 AM Mountain Standard Time
* Operating System: Version 13.4.5 (Build 17L562)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GeoServices/GeoServices-Structs.h>
#import <ProtocolBuffer/PBCodable.h>
#import <libobjc.A.dylib/NSCopying.h>

@class PBDataReader, GEOTrafficPath, GEOTrafficPredictedPaces;

@interface GEOTrafficSpeed : PBCodable <NSCopying> {

	PBDataReader* _reader;
	GEOTrafficPath* _path;
	GEOTrafficPredictedPaces* _predictedPaces;
	unsigned _readerMarkPos;
	unsigned _readerMarkLength;
	os_unfair_lock_s _readerLock;
	int _color;
	unsigned _confidence;
	float _freeFlowSpeedKph;
	unsigned _observationCount;
	float _speedKph;
	struct {
		unsigned has_color : 1;
		unsigned has_confidence : 1;
		unsigned has_freeFlowSpeedKph : 1;
		unsigned has_observationCount : 1;
		unsigned has_speedKph : 1;
		unsigned read_path : 1;
		unsigned read_predictedPaces : 1;
		unsigned wrote_path : 1;
		unsigned wrote_predictedPaces : 1;
		unsigned wrote_color : 1;
		unsigned wrote_confidence : 1;
		unsigned wrote_freeFlowSpeedKph : 1;
		unsigned wrote_observationCount : 1;
		unsigned wrote_speedKph : 1;
	}  _flags;

}

@property (nonatomic,readonly) BOOL hasPath; 
@property (nonatomic,retain) GEOTrafficPath * path; 
@property (assign,nonatomic) BOOL hasSpeedKph; 
@property (assign,nonatomic) float speedKph; 
@property (assign,nonatomic) BOOL hasColor; 
@property (assign,nonatomic) int color; 
@property (assign,nonatomic) BOOL hasConfidence; 
@property (assign,nonatomic) unsigned confidence; 
@property (assign,nonatomic) BOOL hasFreeFlowSpeedKph; 
@property (assign,nonatomic) float freeFlowSpeedKph; 
@property (assign,nonatomic) BOOL hasObservationCount; 
@property (assign,nonatomic) unsigned observationCount; 
@property (nonatomic,readonly) BOOL hasPredictedPaces; 
@property (nonatomic,retain) GEOTrafficPredictedPaces * predictedPaces; 
+(BOOL)isValid:(id)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)description;
-(id)init;
-(id)initWithData:(id)arg1 ;
-(GEOTrafficPath *)path;
-(void)setPath:(GEOTrafficPath *)arg1 ;
-(id)dictionaryRepresentation;
-(unsigned)confidence;
-(BOOL)readFrom:(id)arg1 ;
-(void)writeTo:(id)arg1 ;
-(void)mergeFrom:(id)arg1 ;
-(void)copyTo:(id)arg1 ;
-(void)setConfidence:(unsigned)arg1 ;
-(void)setHasConfidence:(BOOL)arg1 ;
-(BOOL)hasConfidence;
-(int)color;
-(void)setColor:(int)arg1 ;
-(void)readAll:(BOOL)arg1 ;
-(BOOL)hasColor;
-(void)setHasColor:(BOOL)arg1 ;
-(id)colorAsString:(int)arg1 ;
-(int)StringAsColor:(id)arg1 ;
-(float)speedKph;
-(void)setSpeedKph:(float)arg1 ;
-(void)setHasSpeedKph:(BOOL)arg1 ;
-(BOOL)hasSpeedKph;
-(BOOL)hasPath;
-(void)_readPath;
-(void)_readPredictedPaces;
-(GEOTrafficPredictedPaces *)predictedPaces;
-(void)setPredictedPaces:(GEOTrafficPredictedPaces *)arg1 ;
-(float)freeFlowSpeedKph;
-(void)setFreeFlowSpeedKph:(float)arg1 ;
-(void)setHasFreeFlowSpeedKph:(BOOL)arg1 ;
-(BOOL)hasFreeFlowSpeedKph;
-(unsigned)observationCount;
-(void)setObservationCount:(unsigned)arg1 ;
-(void)setHasObservationCount:(BOOL)arg1 ;
-(BOOL)hasObservationCount;
-(BOOL)hasPredictedPaces;
@end

