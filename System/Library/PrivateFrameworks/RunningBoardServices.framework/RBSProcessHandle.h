/*
* This header is generated by classdump-dyld 1.0
* on Sunday, June 7, 2020 at 11:44:14 AM Mountain Standard Time
* Operating System: Version 13.4.5 (Build 17L562)
* Image Source: /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <RunningBoardServices/RunningBoardServices-Structs.h>
#import <libobjc.A.dylib/BSDescriptionProviding.h>
#import <libobjc.A.dylib/BSXPCSecureCoding.h>
#import <libobjc.A.dylib/RBSProcessIdentifier.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@protocol OS_xpc_object;
@class BSMachPortTaskNameRight, RBSProcessIdentity, RBSProcessMonitor, BSProcessHandle, NSObject, RBSProcessBundle, RBSProcessInstance, BSAuditToken, NSString, RBSProcessState, RBSProcessExitContext, RBSProcessLimitations;

@interface RBSProcessHandle : NSObject <BSDescriptionProviding, BSXPCSecureCoding, RBSProcessIdentifier, NSSecureCoding> {

	unsigned long long _ipcID;
	BSMachPortTaskNameRight* _lifePort;
	RBSProcessIdentity* _identity;
	RBSProcessMonitor* _monitor;
	BSProcessHandle* _legacyHandle;
	NSObject*<OS_xpc_object> _codedHandle;
	BOOL _reported;
	RBSProcessBundle* _bundle;
	RBSProcessInstance* _instance;

}

@property (nonatomic,readonly) BSMachPortTaskNameRight * lifePort;                     //@synthesize lifePort=_lifePort - In the implementation block
@property (nonatomic,copy,readonly) RBSProcessInstance * instance;                     //@synthesize instance=_instance - In the implementation block
@property (nonatomic,copy,readonly) BSAuditToken * auditToken; 
@property (getter=isReported,nonatomic,readonly) BOOL reported;                        //@synthesize reported=_reported - In the implementation block
@property (nonatomic,readonly) int pid; 
@property (nonatomic,copy,readonly) NSString * name; 
@property (nonatomic,copy,readonly) RBSProcessIdentity * identity; 
@property (nonatomic,readonly) RBSProcessBundle * bundle;                              //@synthesize bundle=_bundle - In the implementation block
@property (nonatomic,readonly) RBSProcessState * currentState; 
@property (nonatomic,readonly) RBSProcessExitContext * lastExitContext; 
@property (nonatomic,readonly) RBSProcessLimitations * activeLimitations; 
@property (nonatomic,readonly) RBSProcessHandle * hostProcess; 
@property (getter=isValid,nonatomic,readonly) BOOL valid; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)supportsSecureCoding;
+(BOOL)supportsBSXPCSecureCoding;
+(id)handleForIdentifier:(id)arg1 error:(out id*)arg2 ;
+(id)currentProcess;
+(id)handleForPredicate:(id)arg1 error:(out id*)arg2 ;
+(id)observeForImminentAssertionsExpiration:(/*^block*/id)arg1 ;
+(id)handleForLegacyHandle:(id)arg1 error:(out id*)arg2 ;
+(id)handleForKey:(unsigned long long)arg1 fetchIfNeeded:(BOOL)arg2 ;
+(void)clearAllHandles;
+(id)_cachedHandleForKey:(id)arg1 ;
+(id)_cacheHandle:(id)arg1 ;
-(NSString *)name;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSString *)description;
-(id)init;
-(void)dealloc;
-(BOOL)isValid;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(RBSProcessIdentity *)identity;
-(BSAuditToken *)auditToken;
-(RBSProcessBundle *)bundle;
-(id)initWithIdentity:(id)arg1 ;
-(int)pid;
-(void)encodeWithBSXPCCoder:(id)arg1 ;
-(id)initWithBSXPCCoder:(id)arg1 ;
-(id)descriptionWithMultilinePrefix:(id)arg1 ;
-(id)succinctDescriptionBuilder;
-(id)descriptionBuilderWithMultilinePrefix:(id)arg1 ;
-(id)succinctDescription;
-(RBSProcessLimitations *)activeLimitations;
-(id)legacyHandle;
-(void)monitorForDeath:(/*^block*/id)arg1 ;
-(RBSProcessExitContext *)lastExitContext;
-(id)currentStateMatchingDescriptor:(id)arg1 ;
-(int)rbs_pid;
-(RBSProcessHandle *)hostProcess;
-(RBSProcessInstance *)instance;
-(void)_keepAlive;
-(RBSProcessState *)currentState;
-(void)plugInHandshakeComplete;
-(BOOL)matchesProcess:(id)arg1 ;
-(id)processPredicate;
-(void)intendToExitWith:(id)arg1 ;
-(BOOL)isReported;
-(id)initWithInstance:(id)arg1 lifePort:(id)arg2 bundleData:(id)arg3 reported:(BOOL)arg4 ;
-(void)fullEncode:(id)arg1 forKey:(id)arg2 ;
-(void)_fullEncode:(id)arg1 ;
-(BSMachPortTaskNameRight *)lifePort;
@end

