/*
* This header is generated by classdump-dyld 1.0
* on Sunday, June 7, 2020 at 11:42:56 AM Mountain Standard Time
* Operating System: Version 13.4.5 (Build 17L562)
* Image Source: /System/Library/PrivateFrameworks/AirPlayReceiverKit.framework/AirPlayReceiverKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AirPlayReceiverKit/AirPlayReceiverKit-Structs.h>
#import <libobjc.A.dylib/APRKMediaPlayerMessagingDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source, AirPlayReceiverUIDelegate, APRKStreamRendererSampleBufferDelegate, APRKStreamRendererDelegate;
@class AVSampleBufferRenderSynchronizer, AVSampleBufferAudioRenderer, CALayer, APRKStreamRecorder, APRKMediaPlayer, NSObject, NSURL, NSUUID, NSString;

@interface APRKStreamRenderer : NSObject <APRKMediaPlayerMessagingDelegate> {

	OpaqueAPReceiverUIControllerRef _backingUIController;
	BOOL _isActive;
	BOOL _isWiredLink;
	BOOL _canRecord;
	BOOL _useCALayerForMirroring;
	BOOL _shouldRecordFrames;
	BOOL _isAudioActive;
	SCD_Struct_AP2 _startTime;
	AVSampleBufferRenderSynchronizer* _synchronizer;
	AVSampleBufferAudioRenderer* _audioRenderer;
	CALayer* _mirroringLayer;
	CALayer* _debugLayer;
	APRKStreamRecorder* _recorder;
	APRKMediaPlayer* _player;
	OpaqueFigVideoQueueRef _figVideoQueue;
	NSObject*<OS_dispatch_queue> _rendererVideoQueue;
	NSObject*<OS_dispatch_queue> _rendererAudioQueue;
	NSObject*<OS_dispatch_queue> _delegateQueue;
	CGSize _presentationVideoSize;
	SCD_Struct_AP5 _lastVideoSampleBufferSize;
	CGRect _sourceRect;
	opaqueCMFormatDescriptionRef _formatDesc;
	SCD_Struct_AP2 _lastPTS;
	unsigned _transform;
	NSObject*<OS_dispatch_source> _keyFrameTimer;
	BOOL _needsKeyFrame;
	NSURL* _currentRecordingURL;
	unsigned long long _currentVideoPlaybackVersion;
	id<AirPlayReceiverUIDelegate> _airPlayReceiverUIDelegate;
	id<APRKStreamRendererSampleBufferDelegate> _sampleBufferDelegate;
	BOOL _isPaused;
	BOOL _autoRotateLayerFollowingClientRotation;
	NSUUID* _uniqueID;
	NSString* _managedClientName;
	id<APRKStreamRendererDelegate> _delegate;
	unsigned long long _streamRendererMode;

}

@property (nonatomic,copy,readonly) NSUUID * uniqueID;                                    //@synthesize uniqueID=_uniqueID - In the implementation block
@property (nonatomic,copy,readonly) NSString * managedClientName;                         //@synthesize managedClientName=_managedClientName - In the implementation block
@property (assign,nonatomic,__weak) id<APRKStreamRendererDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) BOOL canRecord; 
@property (nonatomic,readonly) BOOL isRecording; 
@property (assign,nonatomic) BOOL isPaused;                                               //@synthesize isPaused=_isPaused - In the implementation block
@property (nonatomic,readonly) CGSize videoFrameSize; 
@property (assign,nonatomic) BOOL autoRotateLayerFollowingClientRotation;                 //@synthesize autoRotateLayerFollowingClientRotation=_autoRotateLayerFollowingClientRotation - In the implementation block
@property (nonatomic,readonly) unsigned long long streamRendererMode;                     //@synthesize streamRendererMode=_streamRendererMode - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<APRKStreamRendererDelegate>)delegate;
-(void)setDelegate:(id<APRKStreamRendererDelegate>)arg1 ;
-(void)stop;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(BOOL)isPaused;
-(NSUUID *)uniqueID;
-(id)player;
-(BOOL)stopRecording;
-(BOOL)isRecording;
-(id)sampleBufferDelegate;
-(void)setIsPaused:(BOOL)arg1 ;
-(id)mediaPlayer;
-(void)mediaPlayerNeedsTLSInfo:(id)arg1 ;
-(void)mediaPlayer:(id)arg1 wantsToUpdateStreamingTypeWithIsAudioValue:(BOOL)arg2 ;
-(void)mediaPlayer:(id)arg1 wantsToSendUpstreamMessageWithDictionary:(id)arg2 ;
-(void)mediaPlayer:(id)arg1 didGenerateFPSSecureStopRecordPayload:(id)arg2 ;
-(BOOL)_performStopRecording;
-(BOOL)canRecord;
-(BOOL)_performStartRecordingWithOutputURL:(id)arg1 ;
-(int)_enqueueVideoFrameForRendering:(opaqueCMSampleBufferRef)arg1 ;
-(short)_ensureFigVideoQueue;
-(void)_updateStreamingModeWithNewMode:(unsigned long long)arg1 ;
-(BOOL)_isRotatedTransform:(unsigned)arg1 ;
-(int)_enqueueSampleBufferForRecording:(opaqueCMSampleBufferRef)arg1 isAudioSBuf:(BOOL)arg2 ;
-(void)_updateKeyFrameStatusWithSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)_cleanupPreviousRecordingIfExisting;
-(BOOL)startRecordingWithOutputURL:(id)arg1 ;
-(void)makeNowPlayingRenderer;
-(id)mirroringLayer;
-(CGSize)videoFrameSize;
-(void)setMirroringVolume:(float)arg1 ;
-(float)mirroringVolume;
-(id)initWithUniqueID:(id)arg1 clientName:(id)arg2 UIController:(OpaqueAPReceiverUIControllerRef)arg3 useCALayerForMirroring:(BOOL)arg4 ;
-(id)HUDLayer;
-(void)processShowPasscodePromptRequest:(id)arg1 ;
-(void)processHidePasscodePromptRequest;
-(void)processStartScreenPresentation;
-(void)processStartVideoPlaybackRequestWithVersion:(unsigned long long)arg1 ;
-(void)processStopVideoPlaybackRequest;
-(void)processStartAudioSessionRequest:(BOOL)arg1 ;
-(void)processStopAudioSessionRequest;
-(BOOL)processVideoSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(BOOL)processAudioSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)setSampleBufferDelegate:(id)arg1 ;
-(void)postVideoV1EventWithType:(const char*)arg1 params:(CFDictionaryRef)arg2 ;
-(void)setVideoV1Delegate:(id)arg1 withDelegateQueue:(id)arg2 ;
-(void)setIsWiredLink:(BOOL)arg1 ;
-(BOOL)isWiredLink;
-(void)setCanRecord:(BOOL)arg1 ;
-(unsigned long long)currentVideoPlaybackVersion;
-(id)videoQueuePerformanceDictionary;
-(BOOL)_shouldFlip:(unsigned)arg1 ;
-(NSString *)managedClientName;
-(BOOL)autoRotateLayerFollowingClientRotation;
-(void)setAutoRotateLayerFollowingClientRotation:(BOOL)arg1 ;
-(unsigned long long)streamRendererMode;
@end

